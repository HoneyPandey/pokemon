@ Generated by gcc 2.9-arm-000512 for Thumb/elf
	.code	16
.gcc2_compiled.:
.text
	.align	2, 0
	.globl	SetUpReflection
	.type	 SetUpReflection,function
	.thumb_func
SetUpReflection:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	r6, r0, #0
	add	r4, r1, #0
	lsl	r5, r2, #0x18
	lsr	r5, r5, #0x18
	mov	r0, #0x20
	ldrsh	r1, [r4, r0]
	mov	r0, #0x22
	ldrsh	r2, [r4, r0]
	add	r0, r4, #0
	mov	r3, #0x98
	bl	CreateCopySpriteAt
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L4
	add	r7, r1, r0
	ldr	r0, .L4+0x4
	str	r0, [r7, #0x1c]
	ldrb	r0, [r7, #0x5]
	mov	r1, #0xc
	orr	r0, r0, r1
	strb	r0, [r7, #0x5]
	mov	r1, #0x3f
	add	r1, r1, r7
	mov	r8, r1
	ldrb	r0, [r1]
	mov	r1, #0x40
	orr	r0, r0, r1
	mov	r1, r8
	strb	r0, [r1]
	ldr	r0, .L4+0x8
	str	r0, [r7, #0x8]
	add	r0, r7, #0
	mov	r1, #0x0
	bl	StartSpriteAnim
	ldr	r0, .L4+0xc
	str	r0, [r7, #0x10]
	mov	r1, r8
	ldrb	r0, [r1]
	mov	r1, #0x8
	orr	r0, r0, r1
	mov	r1, r8
	strb	r0, [r1]
	add	r2, r7, #0
	add	r2, r2, #0x42
	ldrb	r1, [r2]
	mov	r0, #0x3f
	and	r0, r0, r1
	strb	r0, [r2]
	ldrh	r0, [r4, #0x2e]
	strh	r0, [r7, #0x2e]
	ldrb	r0, [r6, #0x8]
	strh	r0, [r7, #0x30]
	strh	r5, [r7, #0x3c]
	add	r0, r6, #0
	add	r1, r7, #0
	bl	LoadObjectReflectionPalette
	cmp	r5, #0
	bne	.L3	@cond_branch
	ldrb	r0, [r7, #0x1]
	mov	r1, #0x4
	neg	r1, r1
	and	r1, r1, r0
	mov	r0, #0x1
	orr	r1, r1, r0
	strb	r1, [r7, #0x1]
.L3:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L5:
	.align	2, 0
.L4:
	.word	gSprites
	.word	UpdateObjectReflectionSprite
	.word	gDummySpriteAnimTable
	.word	gDummySpriteAffineAnimTable
.Lfe1:
	.size	 SetUpReflection,.Lfe1-SetUpReflection
	.align	2, 0
	.type	 GetReflectionVerticalOffset,function
	.thumb_func
GetReflectionVerticalOffset:
	push	{lr}
	ldrb	r0, [r0, #0x5]
	bl	GetObjectEventGraphicsInfo
	ldrh	r0, [r0, #0xa]
	sub	r0, r0, #0x2
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	pop	{r1}
	bx	r1
.Lfe2:
	.size	 GetReflectionVerticalOffset,.Lfe2-GetReflectionVerticalOffset
	.section .rodata
	.align	1, 0
.LC4:
	.short	0xc
	.short	0x1c
	.short	0x2c
.text
	.align	2, 0
	.type	 LoadObjectReflectionPalette,function
	.thumb_func
LoadObjectReflectionPalette:
	push	{r4, r5, lr}
	add	sp, sp, #-0x8
	add	r4, r0, #0
	add	r5, r1, #0
	ldr	r1, .L11
	mov	r0, sp
	mov	r2, #0x6
	bl	memcpy
	mov	r0, #0x0
	strh	r0, [r5, #0x32]
	ldrb	r0, [r4, #0x5]
	bl	GetObjectEventGraphicsInfo
	ldrb	r1, [r0, #0xc]
	mov	r0, #0x80
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L8	@cond_branch
	ldrb	r0, [r4, #0x1f]
	bl	MetatileBehavior_GetBridgeType
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	bne	.L9	@cond_branch
	ldrb	r0, [r4, #0x1e]
	bl	MetatileBehavior_GetBridgeType
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0
	beq	.L8	@cond_branch
.L9:
	sub	r0, r0, #0x1
	lsl	r0, r0, #0x1
	add	r0, r0, sp
	ldrh	r0, [r0]
	strh	r0, [r5, #0x32]
	ldr	r4, .L11+0x4
	add	r0, r4, #0
	bl	LoadObjectEventPalette
	add	r0, r4, #0
	bl	IndexOfSpritePaletteTag
	add	r1, r0, #0
	lsl	r1, r1, #0x4
	ldrb	r2, [r5, #0x5]
	mov	r0, #0xf
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r5, #0x5]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x1c
	mov	r1, #0x1
	bl	UpdatePaletteGammaType
	ldrb	r0, [r5, #0x5]
	lsr	r0, r0, #0x4
	bl	UpdateSpritePaletteWithWeather
	b	.L10
.L12:
	.align	2, 0
.L11:
	.word	.LC4
	.word	0x1102
.L8:
	add	r0, r5, #0
	bl	LoadSpecialReflectionPalette
.L10:
	add	sp, sp, #0x8
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe3:
	.size	 LoadObjectReflectionPalette,.Lfe3-LoadObjectReflectionPalette
	.align	2, 0
	.globl	LoadSpecialReflectionPalette
	.type	 LoadSpecialReflectionPalette,function
	.thumb_func
LoadSpecialReflectionPalette:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	add	r5, r0, #0
	ldrb	r0, [r5, #0x5]
	lsr	r0, r0, #0x4
	lsl	r0, r0, #0x5
	ldr	r1, .L14
	add	r0, r0, r1
	ldr	r4, .L14+0x4
	add	r1, r4, #0
	mov	r2, #0x10
	bl	CpuSet
	mov	r3, #0x80
	lsl	r3, r3, #0x1
	mov	r0, #0xe0
	lsl	r0, r0, #0x2
	str	r0, [sp]
	add	r0, r4, #0
	mov	r1, #0x10
	add	r2, r3, #0
	bl	TintPalette_CustomTone
	str	r4, [sp, #0x4]
	ldrb	r0, [r5, #0x5]
	lsr	r0, r0, #0x4
	bl	GetSpritePaletteTagByPaletteNum
	mov	r1, #0x80
	lsl	r1, r1, #0x5
	add	r0, r0, r1
	lsl	r0, r0, #0x10
	lsr	r0, r0, #0x10
	ldr	r2, .L14+0x8
	add	r4, sp, #0x4
	ldr	r1, [sp, #0x8]
	and	r1, r1, r2
	orr	r1, r1, r0
	str	r1, [sp, #0x8]
	add	r0, r4, #0
	bl	LoadSpritePalette
	ldrh	r0, [r4, #0x4]
	bl	IndexOfSpritePaletteTag
	add	r1, r0, #0
	lsl	r1, r1, #0x4
	ldrb	r2, [r5, #0x5]
	mov	r0, #0xf
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r5, #0x5]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x1c
	mov	r1, #0x2
	bl	UpdatePaletteGammaType
	ldrb	r0, [r5, #0x5]
	lsr	r0, r0, #0x4
	bl	UpdateSpritePaletteWithWeather
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L15:
	.align	2, 0
.L14:
	.word	gPlttBufferUnfaded+0x200
	.word	gReflectionPaletteBuffer
	.word	-0x10000
.Lfe4:
	.size	 LoadSpecialReflectionPalette,.Lfe4-LoadSpecialReflectionPalette
	.align	2, 0
	.type	 UpdateObjectReflectionSprite,function
	.thumb_func
UpdateObjectReflectionSprite:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r9
	mov	r6, r8
	push	{r6, r7}
	add	r4, r0, #0
	mov	r0, #0x2e
	ldrsh	r1, [r4, r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L23
	add	r7, r0, r1
	ldrb	r1, [r7, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L23+0x4
	add	r5, r0, r1
	ldr	r0, [r7]
	ldr	r1, .L23+0x8
	and	r0, r0, r1
	cmp	r0, r1
	bne	.L18	@cond_branch
	ldrb	r1, [r7, #0x8]
	mov	r2, #0x30
	ldrsh	r0, [r4, r2]
	cmp	r1, r0
	beq	.L17	@cond_branch
.L18:
	add	r2, r4, #0
	add	r2, r2, #0x3e
	ldrb	r1, [r2]
	mov	r0, #0x2
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2]
	b	.L19
.L24:
	.align	2, 0
.L23:
	.word	gObjectEvents
	.word	gSprites
	.word	0x20001
.L17:
	ldrb	r1, [r5, #0x1]
	lsr	r1, r1, #0x6
	lsl	r1, r1, #0x6
	ldrb	r2, [r4, #0x1]
	mov	r3, #0x3f
	add	r0, r3, #0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r4, #0x1]
	ldrb	r0, [r5, #0x3]
	lsr	r0, r0, #0x6
	lsl	r0, r0, #0x6
	ldrb	r2, [r4, #0x3]
	add	r1, r3, #0
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r4, #0x3]
	ldrb	r0, [r5, #0x3]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1b
	mov	r2, #0x10
	orr	r0, r0, r2
	lsl	r0, r0, #0x1
	sub	r2, r2, #0x4f
	mov	r9, r2
	and	r1, r1, r2
	orr	r1, r1, r0
	strb	r1, [r4, #0x3]
	ldrh	r1, [r5, #0x4]
	lsl	r1, r1, #0x16
	lsr	r1, r1, #0x16
	ldrh	r2, [r4, #0x4]
	ldr	r0, .L25
	and	r0, r0, r2
	orr	r0, r0, r1
	strh	r0, [r4, #0x4]
	ldr	r0, [r5, #0x18]
	str	r0, [r4, #0x18]
	add	r0, r5, #0
	add	r0, r0, #0x42
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1a
	add	r2, r4, #0
	add	r2, r2, #0x42
	and	r3, r3, r0
	ldrb	r1, [r2]
	mov	r0, #0x40
	neg	r0, r0
	and	r0, r0, r1
	orr	r0, r0, r3
	strb	r0, [r2]
	mov	r0, #0x3e
	add	r0, r0, r5
	mov	r8, r0
	ldrb	r0, [r0]
	add	r6, r4, #0
	add	r6, r6, #0x3e
	mov	r1, #0x4
	and	r1, r1, r0
	ldrb	r2, [r6]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r6]
	ldrh	r0, [r5, #0x20]
	strh	r0, [r4, #0x20]
	add	r0, r7, #0
	bl	GetReflectionVerticalOffset
	ldrh	r1, [r5, #0x22]
	add	r0, r0, r1
	ldrh	r1, [r4, #0x32]
	add	r1, r1, r0
	strh	r1, [r4, #0x22]
	add	r0, r5, #0
	add	r0, r0, #0x28
	ldrb	r1, [r0]
	add	r0, r4, #0
	add	r0, r0, #0x28
	strb	r1, [r0]
	add	r0, r5, #0
	add	r0, r0, #0x29
	ldrb	r0, [r0]
	add	r1, r4, #0
	add	r1, r1, #0x29
	strb	r0, [r1]
	ldrh	r0, [r5, #0x24]
	strh	r0, [r4, #0x24]
	ldrh	r0, [r5, #0x26]
	neg	r0, r0
	strh	r0, [r4, #0x26]
	mov	r2, r8
	ldrb	r1, [r2]
	mov	r0, #0x2
	and	r0, r0, r1
	ldrb	r1, [r6]
	mov	r2, #0x3
	neg	r2, r2
	and	r2, r2, r1
	orr	r2, r2, r0
	strb	r2, [r6]
	ldrb	r0, [r7, #0x3]
	lsl	r0, r0, #0x1c
	cmp	r0, #0
	bge	.L20	@cond_branch
	mov	r0, #0x4
	orr	r2, r2, r0
	strb	r2, [r6]
.L20:
	mov	r1, #0x3c
	ldrsh	r0, [r4, r1]
	cmp	r0, #0
	bne	.L19	@cond_branch
	ldrb	r0, [r4, #0x3]
	mov	r2, r9
	and	r2, r2, r0
	strb	r2, [r4, #0x3]
	ldrb	r0, [r5, #0x3]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1b
	mov	r1, #0x8
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L19	@cond_branch
	mov	r1, #0x2
	add	r0, r2, #0
	orr	r0, r0, r1
	strb	r0, [r4, #0x3]
.L19:
	pop	{r3, r4}
	mov	r8, r3
	mov	r9, r4
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L26:
	.align	2, 0
.L25:
	.word	-0x400
.Lfe5:
	.size	 UpdateObjectReflectionSprite,.Lfe5-UpdateObjectReflectionSprite
	.align	2, 0
	.globl	CreateWarpArrowSprite
	.type	 CreateWarpArrowSprite,function
	.thumb_func
CreateWarpArrowSprite:
	push	{r4, lr}
	mov	r0, #0x8
	mov	r1, #0x0
	bl	LoadFieldEffectPalette_
	ldr	r0, .L29
	ldr	r0, [r0, #0x20]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x52
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r4, r0, #0
	cmp	r0, #0x40
	beq	.L28	@cond_branch
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L29+0x4
	add	r1, r1, r0
	ldrb	r2, [r1, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	mov	r3, #0x4
	orr	r0, r0, r3
	strb	r0, [r1, #0x5]
	add	r1, r1, #0x3e
	ldrb	r0, [r1]
	mov	r2, #0x2
	orr	r0, r0, r2
	orr	r0, r0, r3
	strb	r0, [r1]
.L28:
	add	r0, r4, #0
	pop	{r4}
	pop	{r1}
	bx	r1
.L30:
	.align	2, 0
.L29:
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe6:
	.size	 CreateWarpArrowSprite,.Lfe6-CreateWarpArrowSprite
	.align	2, 0
	.globl	SetSpriteInvisible
	.type	 SetSpriteInvisible,function
	.thumb_func
SetSpriteInvisible:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L32
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	add	r1, r1, #0x3e
	ldrb	r0, [r1]
	mov	r2, #0x4
	orr	r0, r0, r2
	strb	r0, [r1]
	bx	lr
.L33:
	.align	2, 0
.L32:
	.word	gSprites
.Lfe7:
	.size	 SetSpriteInvisible,.Lfe7-SetSpriteInvisible
	.align	2, 0
	.globl	ShowWarpArrowSprite
	.type	 ShowWarpArrowSprite,function
	.thumb_func
ShowWarpArrowSprite:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	mov	r8, r1
	lsl	r2, r2, #0x10
	lsr	r7, r2, #0x10
	lsl	r3, r3, #0x10
	lsr	r6, r3, #0x10
	lsl	r0, r5, #0x4
	add	r0, r0, r5
	lsl	r0, r0, #0x2
	ldr	r1, .L37
	add	r2, r0, r1
	add	r0, r2, #0
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L36	@cond_branch
	mov	r0, #0x2e
	ldrsh	r1, [r2, r0]
	lsl	r0, r7, #0x10
	asr	r0, r0, #0x10
	cmp	r1, r0
	bne	.L36	@cond_branch
	mov	r0, #0x30
	ldrsh	r1, [r2, r0]
	lsl	r0, r6, #0x10
	asr	r0, r0, #0x10
	cmp	r1, r0
	beq	.L35	@cond_branch
.L36:
	lsl	r0, r7, #0x10
	asr	r0, r0, #0x10
	lsl	r1, r6, #0x10
	asr	r1, r1, #0x10
	mov	r4, sp
	add	r4, r4, #0x2
	mov	r2, sp
	add	r3, r4, #0
	bl	SetSpritePosToMapCoords
	lsl	r0, r5, #0x4
	add	r0, r0, r5
	lsl	r0, r0, #0x2
	ldr	r1, .L37
	add	r2, r0, r1
	mov	r0, sp
	ldrh	r0, [r0]
	add	r0, r0, #0x8
	strh	r0, [r2, #0x20]
	ldrh	r0, [r4]
	add	r0, r0, #0x8
	strh	r0, [r2, #0x22]
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r1, [r3]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r3]
	strh	r7, [r2, #0x2e]
	strh	r6, [r2, #0x30]
	mov	r1, r8
	sub	r1, r1, #0x1
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r2, #0
	bl	StartSpriteAnim
.L35:
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L38:
	.align	2, 0
.L37:
	.word	gSprites
.Lfe8:
	.size	 ShowWarpArrowSprite,.Lfe8-ShowWarpArrowSprite
	.section .rodata
	.type	 sShadowEffectTemplateIds,object
sShadowEffectTemplateIds:
	.byte	0x0
	.byte	0x1
	.byte	0x2
	.byte	0x3
	.size	 sShadowEffectTemplateIds,4
	.globl	gShadowVerticalOffsets
	.align	1, 0
	.type	 gShadowVerticalOffsets,object
gShadowVerticalOffsets:
	.short	0x4
	.short	0x4
	.short	0x4
	.short	0x10
	.size	 gShadowVerticalOffsets,8
.text
	.align	2, 0
	.globl	FldEff_Shadow
	.type	 FldEff_Shadow,function
	.thumb_func
FldEff_Shadow:
	push	{r4, r5, r6, lr}
	ldr	r6, .L41
	ldrb	r0, [r6]
	ldrb	r1, [r6, #0x4]
	ldrb	r2, [r6, #0x8]
	bl	GetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldr	r2, .L41+0x4
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldrb	r0, [r1, #0x5]
	bl	GetObjectEventGraphicsInfo
	add	r5, r0, #0
	ldr	r4, .L41+0x8
	ldrb	r0, [r5, #0xc]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1e
	add	r0, r0, r4
	ldrb	r0, [r0]
	mov	r1, #0x0
	bl	LoadFieldEffectPalette_
	ldr	r1, .L41+0xc
	ldrb	r0, [r5, #0xc]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1e
	add	r0, r0, r4
	ldrb	r0, [r0]
	lsl	r0, r0, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x94
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x40
	beq	.L40	@cond_branch
	ldr	r0, .L41+0x10
	lsl	r2, r1, #0x4
	add	r2, r2, r1
	lsl	r2, r2, #0x2
	add	r2, r2, r0
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r3]
	ldr	r0, [r6]
	strh	r0, [r2, #0x2e]
	ldr	r0, [r6, #0x4]
	strh	r0, [r2, #0x30]
	ldr	r0, [r6, #0x8]
	strh	r0, [r2, #0x32]
	ldrh	r1, [r5, #0xa]
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x11
	ldr	r3, .L41+0x14
	ldrb	r0, [r5, #0xc]
	lsl	r0, r0, #0x1a
	lsr	r0, r0, #0x1e
	lsl	r0, r0, #0x1
	add	r0, r0, r3
	ldrh	r0, [r0]
	sub	r1, r1, r0
	strh	r1, [r2, #0x34]
.L40:
	mov	r0, #0x0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L42:
	.align	2, 0
.L41:
	.word	gFieldEffectArguments
	.word	gObjectEvents
	.word	sShadowEffectTemplateIds
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
	.word	gShadowVerticalOffsets
.Lfe9:
	.size	 FldEff_Shadow,.Lfe9-FldEff_Shadow
	.align	2, 0
	.globl	UpdateShadowFieldEffect
	.type	 UpdateShadowFieldEffect,function
	.thumb_func
UpdateShadowFieldEffect:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	add	r5, r0, #0
	ldrh	r0, [r5, #0x2e]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r1, [r5, #0x30]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldrh	r2, [r5, #0x32]
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r3, sp
	bl	TryGetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L44	@cond_branch
	add	r0, r5, #0
	mov	r1, #0x3
	bl	FieldEffectStop
	b	.L45
.L44:
	mov	r0, sp
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L48
	add	r4, r0, r1
	ldrb	r0, [r4, #0x4]
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L48+0x4
	add	r1, r1, r0
	ldrb	r0, [r1, #0x5]
	mov	r2, #0xc
	and	r2, r2, r0
	ldrb	r3, [r5, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r2
	strb	r0, [r5, #0x5]
	ldrh	r0, [r1, #0x20]
	strh	r0, [r5, #0x20]
	ldrh	r0, [r5, #0x34]
	ldrh	r1, [r1, #0x22]
	add	r0, r0, r1
	strh	r0, [r5, #0x22]
	ldr	r0, [r4]
	ldr	r1, .L48+0x8
	and	r0, r0, r1
	cmp	r0, r1
	bne	.L47	@cond_branch
	ldrb	r0, [r4, #0x1e]
	bl	MetatileBehavior_IsPokeGrass
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L47	@cond_branch
	ldrb	r0, [r4, #0x1e]
	bl	MetatileBehavior_IsSurfableWaterOrUnderwater
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L47	@cond_branch
	ldrb	r0, [r4, #0x1f]
	bl	MetatileBehavior_IsSurfableWaterOrUnderwater
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L47	@cond_branch
	ldrb	r0, [r4, #0x1e]
	bl	MetatileBehavior_IsReflective
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L47	@cond_branch
	ldrb	r0, [r4, #0x1f]
	bl	MetatileBehavior_IsReflective
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L45	@cond_branch
.L47:
	add	r0, r5, #0
	mov	r1, #0x3
	bl	FieldEffectStop
.L45:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L49:
	.align	2, 0
.L48:
	.word	gObjectEvents
	.word	gSprites
	.word	0x400001
.Lfe10:
	.size	 UpdateShadowFieldEffect,.Lfe10-UpdateShadowFieldEffect
	.align	2, 0
	.globl	FldEff_TallGrass
	.type	 FldEff_TallGrass,function
	.thumb_func
FldEff_TallGrass:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	ldr	r5, .L53
	ldrh	r1, [r5]
	mov	r0, sp
	strh	r1, [r0]
	ldrh	r0, [r5, #0x4]
	mov	r4, sp
	add	r4, r4, #0x2
	strh	r0, [r4]
	mov	r0, sp
	add	r1, r4, #0
	mov	r2, #0x8
	mov	r3, #0x8
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L53+0x4
	ldr	r0, [r0, #0x10]
	mov	r1, sp
	mov	r2, #0x0
	ldrsh	r1, [r1, r2]
	mov	r3, #0x0
	ldrsh	r2, [r4, r3]
	mov	r3, #0x0
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x40
	beq	.L51	@cond_branch
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L53+0x8
	add	r3, r0, r1
	add	r2, r3, #0
	add	r2, r2, #0x3e
	ldrb	r0, [r2]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r2]
	mov	r0, #0x3
	ldrb	r1, [r5, #0xc]
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r2, [r3, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r3, #0x5]
	ldr	r0, [r5, #0x8]
	strh	r0, [r3, #0x2e]
	ldr	r0, [r5]
	strh	r0, [r3, #0x30]
	ldr	r0, [r5, #0x4]
	strh	r0, [r3, #0x32]
	ldr	r0, [r5, #0x10]
	strh	r0, [r3, #0x34]
	ldr	r0, [r5, #0x14]
	strh	r0, [r3, #0x36]
	ldr	r0, [r5, #0x18]
	strh	r0, [r3, #0x38]
	ldr	r0, [r5, #0x1c]
	cmp	r0, #0
	beq	.L51	@cond_branch
	add	r0, r3, #0
	mov	r1, #0x4
	bl	SeekSpriteAnim
.L51:
	mov	r0, #0x0
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L54:
	.align	2, 0
.L53:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe11:
	.size	 FldEff_TallGrass,.Lfe11-FldEff_TallGrass
	.align	2, 0
	.globl	UpdateTallGrassFieldEffect
	.type	 UpdateTallGrassFieldEffect,function
	.thumb_func
UpdateTallGrassFieldEffect:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x4
	add	r5, r0, #0
	ldrh	r0, [r5, #0x38]
	lsr	r4, r0, #0x8
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldr	r3, .L63
	ldrb	r1, [r3]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L56	@cond_branch
	ldr	r0, .L63+0x4
	ldr	r2, [r0]
	mov	r0, #0x5
	ldrsb	r0, [r2, r0]
	cmp	r0, r4
	bne	.L57	@cond_branch
	mov	r0, #0x4
	ldrsb	r0, [r2, r0]
	cmp	r0, r7
	beq	.L56	@cond_branch
.L57:
	ldr	r1, [r3, #0x4]
	ldrh	r0, [r5, #0x30]
	sub	r0, r0, r1
	strh	r0, [r5, #0x30]
	ldr	r1, [r3, #0x8]
	ldrh	r0, [r5, #0x32]
	sub	r0, r0, r1
	strh	r0, [r5, #0x32]
	ldrb	r1, [r2, #0x5]
	lsl	r1, r1, #0x8
	ldrb	r0, [r2, #0x4]
	orr	r0, r0, r1
	strh	r0, [r5, #0x38]
.L56:
	ldrh	r0, [r5, #0x34]
	lsr	r1, r0, #0x8
	mov	r8, r1
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	ldrh	r0, [r5, #0x36]
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	mov	r2, #0x30
	ldrsh	r0, [r5, r2]
	mov	r2, #0x32
	ldrsh	r1, [r5, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	mov	r0, r8
	add	r1, r4, #0
	add	r2, r7, #0
	mov	r3, sp
	bl	TryGetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L59	@cond_branch
	add	r0, r6, #0
	bl	MetatileBehavior_IsTallGrass
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L59	@cond_branch
	mov	r1, #0x3c
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	beq	.L58	@cond_branch
	add	r0, r5, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L58	@cond_branch
.L59:
	add	r0, r5, #0
	mov	r1, #0x4
	bl	FieldEffectStop
	b	.L60
.L64:
	.align	2, 0
.L63:
	.word	gCamera
	.word	gSaveBlock1Ptr
.L58:
	mov	r0, sp
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L65
	add	r2, r0, r1
	ldr	r0, [r2, #0x10]
	ldr	r1, [r5, #0x30]
	cmp	r0, r1
	beq	.L61	@cond_branch
	ldr	r0, [r2, #0x14]
	cmp	r0, r1
	beq	.L61	@cond_branch
	mov	r0, #0x1
	strh	r0, [r5, #0x3c]
.L61:
	mov	r6, #0x0
	add	r0, r5, #0
	add	r0, r0, #0x2b
	ldrb	r0, [r0]
	cmp	r0, #0
	bne	.L62	@cond_branch
	mov	r6, #0x4
.L62:
	add	r0, r5, #0
	mov	r1, #0x0
	bl	UpdateObjectEventSpriteVisibility
	ldrh	r1, [r5, #0x2e]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	add	r2, r6, #0
	bl	sub_81561FC
.L60:
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L66:
	.align	2, 0
.L65:
	.word	gObjectEvents
.Lfe12:
	.size	 UpdateTallGrassFieldEffect,.Lfe12-UpdateTallGrassFieldEffect
	.align	2, 0
	.globl	FldEff_JumpTallGrass
	.type	 FldEff_JumpTallGrass,function
	.thumb_func
FldEff_JumpTallGrass:
	push	{r4, lr}
	ldr	r4, .L69
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0xc
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L69+0x4
	ldr	r0, [r0, #0x28]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	mov	r3, #0x0
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L68	@cond_branch
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L69+0x8
	add	r2, r2, r0
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r3]
	mov	r0, #0x3
	ldrb	r1, [r4, #0xc]
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r3, [r2, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
	ldr	r0, [r4, #0x8]
	strh	r0, [r2, #0x2e]
	mov	r0, #0xc
	strh	r0, [r2, #0x30]
.L68:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L70:
	.align	2, 0
.L69:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe13:
	.size	 FldEff_JumpTallGrass,.Lfe13-FldEff_JumpTallGrass
	.align	2, 0
	.globl	FindTallGrassFieldEffectSpriteId
	.type	 FindTallGrassFieldEffectSpriteId,function
	.thumb_func
FindTallGrassFieldEffectSpriteId:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	ldr	r4, [sp, #0x18]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	ip, r0
	lsl	r1, r1, #0x18
	lsr	r7, r1, #0x18
	lsl	r2, r2, #0x18
	lsr	r6, r2, #0x18
	mov	r5, #0x0
	ldr	r0, .L80
	mov	r8, r0
	lsl	r3, r3, #0x10
	asr	r3, r3, #0x10
	lsl	r4, r4, #0x10
	asr	r4, r4, #0x10
.L75:
	lsl	r0, r5, #0x4
	add	r0, r0, r5
	lsl	r0, r0, #0x2
	mov	r1, r8
	add	r2, r0, r1
	add	r0, r2, #0
	add	r0, r0, #0x3e
	ldrb	r0, [r0]
	lsl	r0, r0, #0x1f
	cmp	r0, #0
	beq	.L74	@cond_branch
	ldr	r1, [r2, #0x1c]
	ldr	r0, .L80+0x4
	cmp	r1, r0
	bne	.L74	@cond_branch
	mov	r1, #0x30
	ldrsh	r0, [r2, r1]
	cmp	r3, r0
	bne	.L74	@cond_branch
	mov	r1, #0x32
	ldrsh	r0, [r2, r1]
	cmp	r4, r0
	bne	.L74	@cond_branch
	ldrh	r1, [r2, #0x34]
	lsr	r0, r1, #0x8
	cmp	ip, r0
	bne	.L74	@cond_branch
	mov	r0, #0xff
	and	r0, r0, r1
	cmp	r7, r0
	bne	.L74	@cond_branch
	mov	r1, #0x36
	ldrsh	r0, [r2, r1]
	cmp	r6, r0
	bne	.L74	@cond_branch
	add	r0, r5, #0
	b	.L79
.L81:
	.align	2, 0
.L80:
	.word	gSprites
	.word	UpdateTallGrassFieldEffect
.L74:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x3f
	bls	.L75	@cond_branch
	mov	r0, #0x40
.L79:
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.Lfe14:
	.size	 FindTallGrassFieldEffectSpriteId,.Lfe14-FindTallGrassFieldEffectSpriteId
	.align	2, 0
	.globl	FldEff_LongGrass
	.type	 FldEff_LongGrass,function
	.thumb_func
FldEff_LongGrass:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	ldr	r5, .L85
	ldrh	r1, [r5]
	mov	r0, sp
	strh	r1, [r0]
	ldrh	r0, [r5, #0x4]
	mov	r4, sp
	add	r4, r4, #0x2
	strh	r0, [r4]
	mov	r0, sp
	add	r1, r4, #0
	mov	r2, #0x8
	mov	r3, #0x8
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L85+0x4
	ldr	r0, [r0, #0x3c]
	mov	r1, sp
	mov	r2, #0x0
	ldrsh	r1, [r1, r2]
	mov	r3, #0x0
	ldrsh	r2, [r4, r3]
	mov	r3, #0x0
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x40
	beq	.L83	@cond_branch
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L85+0x8
	add	r4, r0, r1
	add	r2, r4, #0
	add	r2, r2, #0x3e
	ldrb	r0, [r2]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r2]
	ldrb	r0, [r5, #0x8]
	bl	ZCoordToPriority
	mov	r1, #0x3
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r2, [r4, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r4, #0x5]
	ldr	r0, [r5, #0x8]
	strh	r0, [r4, #0x2e]
	ldr	r0, [r5]
	strh	r0, [r4, #0x30]
	ldr	r0, [r5, #0x4]
	strh	r0, [r4, #0x32]
	ldr	r0, [r5, #0x10]
	strh	r0, [r4, #0x34]
	ldr	r0, [r5, #0x14]
	strh	r0, [r4, #0x36]
	ldr	r0, [r5, #0x18]
	strh	r0, [r4, #0x38]
	ldr	r0, [r5, #0x1c]
	cmp	r0, #0
	beq	.L83	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x6
	bl	SeekSpriteAnim
.L83:
	mov	r0, #0x0
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L86:
	.align	2, 0
.L85:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe15:
	.size	 FldEff_LongGrass,.Lfe15-FldEff_LongGrass
	.align	2, 0
	.globl	UpdateLongGrassFieldEffect
	.type	 UpdateLongGrassFieldEffect,function
	.thumb_func
UpdateLongGrassFieldEffect:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x4
	add	r5, r0, #0
	ldrh	r0, [r5, #0x38]
	lsr	r7, r0, #0x8
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	ldr	r3, .L94
	ldrb	r1, [r3]
	mov	r0, #0x1
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L88	@cond_branch
	ldr	r0, .L94+0x4
	ldr	r2, [r0]
	mov	r0, #0x5
	ldrsb	r0, [r2, r0]
	cmp	r0, r7
	bne	.L89	@cond_branch
	mov	r0, #0x4
	ldrsb	r0, [r2, r0]
	cmp	r0, r6
	beq	.L88	@cond_branch
.L89:
	ldr	r1, [r3, #0x4]
	ldrh	r0, [r5, #0x30]
	sub	r0, r0, r1
	strh	r0, [r5, #0x30]
	ldr	r1, [r3, #0x8]
	ldrh	r0, [r5, #0x32]
	sub	r0, r0, r1
	strh	r0, [r5, #0x32]
	ldrb	r1, [r2, #0x5]
	lsl	r1, r1, #0x8
	ldrb	r0, [r2, #0x4]
	orr	r0, r0, r1
	strh	r0, [r5, #0x38]
.L88:
	ldrh	r0, [r5, #0x34]
	lsr	r1, r0, #0x8
	mov	r8, r1
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	ldrh	r0, [r5, #0x36]
	lsl	r0, r0, #0x18
	lsr	r6, r0, #0x18
	mov	r2, #0x30
	ldrsh	r0, [r5, r2]
	mov	r2, #0x32
	ldrsh	r1, [r5, r2]
	bl	MapGridGetMetatileBehaviorAt
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	mov	r0, r8
	add	r1, r7, #0
	add	r2, r6, #0
	mov	r3, sp
	bl	TryGetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L91	@cond_branch
	add	r0, r4, #0
	bl	MetatileBehavior_IsLongGrass
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L91	@cond_branch
	mov	r1, #0x3c
	ldrsh	r0, [r5, r1]
	cmp	r0, #0
	beq	.L90	@cond_branch
	add	r0, r5, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L90	@cond_branch
.L91:
	add	r0, r5, #0
	mov	r1, #0x11
	bl	FieldEffectStop
	b	.L92
.L95:
	.align	2, 0
.L94:
	.word	gCamera
	.word	gSaveBlock1Ptr
.L90:
	mov	r0, sp
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L96
	add	r2, r0, r1
	ldr	r0, [r2, #0x10]
	ldr	r1, [r5, #0x30]
	cmp	r0, r1
	beq	.L93	@cond_branch
	ldr	r0, [r2, #0x14]
	cmp	r0, r1
	beq	.L93	@cond_branch
	mov	r0, #0x1
	strh	r0, [r5, #0x3c]
.L93:
	add	r0, r5, #0
	mov	r1, #0x0
	bl	UpdateObjectEventSpriteVisibility
	ldrh	r1, [r5, #0x2e]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	mov	r2, #0x0
	bl	sub_81561FC
.L92:
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L97:
	.align	2, 0
.L96:
	.word	gObjectEvents
.Lfe16:
	.size	 UpdateLongGrassFieldEffect,.Lfe16-UpdateLongGrassFieldEffect
	.align	2, 0
	.globl	FldEff_JumpLongGrass
	.type	 FldEff_JumpLongGrass,function
	.thumb_func
FldEff_JumpLongGrass:
	push	{r4, lr}
	ldr	r4, .L100
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0x8
	bl	SetSpritePosToOffsetMapCoords
	mov	r0, #0x7
	bl	LoadFieldEffectPalette
	ldr	r0, .L100+0x4
	ldr	r0, [r0, #0x40]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	mov	r3, #0x0
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L99	@cond_branch
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L100+0x8
	add	r2, r2, r0
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r3]
	mov	r0, #0x3
	ldrb	r1, [r4, #0xc]
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r3, [r2, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
	ldr	r0, [r4, #0x8]
	strh	r0, [r2, #0x2e]
	mov	r0, #0x12
	strh	r0, [r2, #0x30]
.L99:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L101:
	.align	2, 0
.L100:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe17:
	.size	 FldEff_JumpLongGrass,.Lfe17-FldEff_JumpLongGrass
	.align	2, 0
	.globl	FldEff_ShortGrass
	.type	 FldEff_ShortGrass,function
	.thumb_func
FldEff_ShortGrass:
	push	{r4, r5, r6, lr}
	ldr	r6, .L104
	ldrb	r0, [r6]
	ldrb	r1, [r6, #0x4]
	ldrb	r2, [r6, #0x8]
	bl	GetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L104+0x4
	add	r5, r1, r0
	ldr	r0, .L104+0x8
	ldr	r0, [r0, #0x78]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L103	@cond_branch
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r4, .L104+0xc
	add	r2, r2, r4
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r3]
	ldrb	r1, [r5, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldrb	r0, [r0, #0x5]
	mov	r1, #0xc
	and	r1, r1, r0
	ldrb	r3, [r2, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
	ldr	r0, [r6]
	strh	r0, [r2, #0x2e]
	ldr	r0, [r6, #0x4]
	strh	r0, [r2, #0x30]
	ldr	r0, [r6, #0x8]
	strh	r0, [r2, #0x32]
	ldrb	r1, [r5, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldrh	r0, [r0, #0x20]
	strh	r0, [r2, #0x34]
	ldrb	r1, [r5, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldrh	r0, [r0, #0x22]
	strh	r0, [r2, #0x36]
.L103:
	mov	r0, #0x0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L105:
	.align	2, 0
.L104:
	.word	gFieldEffectArguments
	.word	gObjectEvents
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe18:
	.size	 FldEff_ShortGrass,.Lfe18-FldEff_ShortGrass
	.align	2, 0
	.globl	UpdateShortGrassFieldEffect
	.type	 UpdateShortGrassFieldEffect,function
	.thumb_func
UpdateShortGrassFieldEffect:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	ldrh	r0, [r4, #0x2e]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r1, [r4, #0x30]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldrh	r2, [r4, #0x32]
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r3, sp
	bl	TryGetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L108	@cond_branch
	ldr	r5, .L113
	mov	r0, sp
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r0, r5
	ldrb	r0, [r1, #0x2]
	lsl	r0, r0, #0x1d
	cmp	r0, #0
	blt	.L107	@cond_branch
.L108:
	add	r0, r4, #0
	mov	r1, #0x29
	bl	FieldEffectStop
	b	.L109
.L114:
	.align	2, 0
.L113:
	.word	gObjectEvents
.L107:
	ldrb	r0, [r1, #0x5]
	bl	GetObjectEventGraphicsInfo
	mov	r8, r0
	mov	r0, sp
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r5
	ldrb	r1, [r0, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L115
	add	r6, r0, r1
	ldrh	r5, [r6, #0x22]
	ldrh	r7, [r6, #0x20]
	mov	r0, #0x20
	ldrsh	r1, [r6, r0]
	mov	r2, #0x34
	ldrsh	r0, [r4, r2]
	cmp	r1, r0
	bne	.L111	@cond_branch
	lsl	r0, r5, #0x10
	asr	r0, r0, #0x10
	mov	r2, #0x36
	ldrsh	r1, [r4, r2]
	cmp	r0, r1
	beq	.L110	@cond_branch
.L111:
	strh	r7, [r4, #0x34]
	strh	r5, [r4, #0x36]
	add	r0, r4, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L110	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x0
	bl	StartSpriteAnim
.L110:
	strh	r7, [r4, #0x20]
	strh	r5, [r4, #0x22]
	mov	r1, r8
	ldrh	r0, [r1, #0xa]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x11
	sub	r0, r0, #0x8
	strh	r0, [r4, #0x26]
	add	r0, r6, #0
	add	r0, r0, #0x43
	ldrb	r0, [r0]
	sub	r0, r0, #0x1
	add	r1, r4, #0
	add	r1, r1, #0x43
	strb	r0, [r1]
	ldrb	r0, [r6, #0x5]
	mov	r1, #0xc
	and	r1, r1, r0
	ldrb	r2, [r4, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r4, #0x5]
	add	r0, r6, #0
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	lsl	r1, r1, #0x1d
	lsr	r1, r1, #0x1f
	add	r0, r4, #0
	bl	UpdateObjectEventSpriteVisibility
.L109:
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L116:
	.align	2, 0
.L115:
	.word	gSprites
.Lfe19:
	.size	 UpdateShortGrassFieldEffect,.Lfe19-UpdateShortGrassFieldEffect
	.align	2, 0
	.globl	FldEff_SandFootprints
	.type	 FldEff_SandFootprints,function
	.thumb_func
FldEff_SandFootprints:
	push	{r4, lr}
	ldr	r4, .L119
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0x8
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L119+0x4
	ldr	r0, [r0, #0x2c]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	ldrb	r3, [r4, #0x8]
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x40
	beq	.L118	@cond_branch
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L119+0x8
	add	r0, r0, r1
	add	r3, r0, #0
	add	r3, r3, #0x3e
	ldrb	r1, [r3]
	mov	r2, #0x2
	orr	r1, r1, r2
	strb	r1, [r3]
	mov	r1, #0x3
	ldrb	r2, [r4, #0xc]
	and	r2, r2, r1
	lsl	r2, r2, #0x2
	ldrb	r3, [r0, #0x5]
	mov	r1, #0xd
	neg	r1, r1
	and	r1, r1, r3
	orr	r1, r1, r2
	strb	r1, [r0, #0x5]
	mov	r1, #0xd
	strh	r1, [r0, #0x3c]
	ldrb	r1, [r4, #0x10]
	bl	StartSpriteAnim
.L118:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L120:
	.align	2, 0
.L119:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe20:
	.size	 FldEff_SandFootprints,.Lfe20-FldEff_SandFootprints
	.align	2, 0
	.globl	FldEff_DeepSandFootprints
	.type	 FldEff_DeepSandFootprints,function
	.thumb_func
FldEff_DeepSandFootprints:
	push	{r4, r5, lr}
	ldr	r4, .L123
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0x8
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L123+0x4
	ldr	r0, [r0, #0x5c]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	ldrb	r3, [r4, #0x8]
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	add	r5, r1, #0
	cmp	r1, #0x40
	beq	.L122	@cond_branch
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L123+0x8
	add	r0, r0, r1
	add	r3, r0, #0
	add	r3, r3, #0x3e
	ldrb	r1, [r3]
	mov	r2, #0x2
	orr	r1, r1, r2
	strb	r1, [r3]
	mov	r1, #0x3
	ldrb	r2, [r4, #0xc]
	and	r2, r2, r1
	lsl	r2, r2, #0x2
	ldrb	r3, [r0, #0x5]
	mov	r1, #0xd
	neg	r1, r1
	and	r1, r1, r3
	orr	r1, r1, r2
	strb	r1, [r0, #0x5]
	mov	r1, #0x18
	strh	r1, [r0, #0x3c]
	ldrb	r1, [r4, #0x10]
	bl	StartSpriteAnim
.L122:
	add	r0, r5, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L124:
	.align	2, 0
.L123:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe21:
	.size	 FldEff_DeepSandFootprints,.Lfe21-FldEff_DeepSandFootprints
	.align	2, 0
	.globl	FldEff_BikeTireTracks
	.type	 FldEff_BikeTireTracks,function
	.thumb_func
FldEff_BikeTireTracks:
	push	{r4, r5, lr}
	ldr	r4, .L127
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0x8
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L127+0x4
	ldr	r0, [r0, #0x6c]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	ldrb	r3, [r4, #0x8]
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r1, r0, #0x18
	add	r5, r1, #0
	cmp	r1, #0x40
	beq	.L126	@cond_branch
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L127+0x8
	add	r0, r0, r1
	add	r3, r0, #0
	add	r3, r3, #0x3e
	ldrb	r1, [r3]
	mov	r2, #0x2
	orr	r1, r1, r2
	strb	r1, [r3]
	mov	r1, #0x3
	ldrb	r2, [r4, #0xc]
	and	r2, r2, r1
	lsl	r2, r2, #0x2
	ldrb	r3, [r0, #0x5]
	mov	r1, #0xd
	neg	r1, r1
	and	r1, r1, r3
	orr	r1, r1, r2
	strb	r1, [r0, #0x5]
	mov	r1, #0x23
	strh	r1, [r0, #0x3c]
	ldrb	r1, [r4, #0x10]
	bl	StartSpriteAnim
.L126:
	add	r0, r5, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L128:
	.align	2, 0
.L127:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe22:
	.size	 FldEff_BikeTireTracks,.Lfe22-FldEff_BikeTireTracks
	.globl	gFadeFootprintsTireTracksFuncs
	.section .rodata
	.align	2, 0
	.type	 gFadeFootprintsTireTracksFuncs,object
gFadeFootprintsTireTracksFuncs:
	.word	FadeFootprintsTireTracks_Step0
	.word	FadeFootprintsTireTracks_Step1
	.size	 gFadeFootprintsTireTracksFuncs,8
.text
	.align	2, 0
	.globl	UpdateFootprintsTireTracksFieldEffect
	.type	 UpdateFootprintsTireTracksFieldEffect,function
	.thumb_func
UpdateFootprintsTireTracksFieldEffect:
	push	{lr}
	ldr	r2, .L130
	mov	r3, #0x2e
	ldrsh	r1, [r0, r3]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	_call_via_r1
	pop	{r0}
	bx	r0
.L131:
	.align	2, 0
.L130:
	.word	gFadeFootprintsTireTracksFuncs
.Lfe23:
	.size	 UpdateFootprintsTireTracksFieldEffect,.Lfe23-UpdateFootprintsTireTracksFieldEffect
	.align	2, 0
	.type	 FadeFootprintsTireTracks_Step0,function
	.thumb_func
FadeFootprintsTireTracks_Step0:
	push	{lr}
	add	r1, r0, #0
	ldrh	r0, [r1, #0x30]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x30]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x28
	ble	.L133	@cond_branch
	mov	r0, #0x1
	strh	r0, [r1, #0x2e]
.L133:
	add	r0, r1, #0
	mov	r1, #0x0
	bl	UpdateObjectEventSpriteVisibility
	pop	{r0}
	bx	r0
.Lfe24:
	.size	 FadeFootprintsTireTracks_Step0,.Lfe24-FadeFootprintsTireTracks_Step0
	.align	2, 0
	.type	 FadeFootprintsTireTracks_Step1,function
	.thumb_func
FadeFootprintsTireTracks_Step1:
	push	{r4, lr}
	add	r4, r0, #0
	add	r3, r4, #0
	add	r3, r3, #0x3e
	ldrb	r2, [r3]
	lsl	r0, r2, #0x1d
	lsr	r0, r0, #0x1f
	mov	r1, #0x1
	eor	r1, r1, r0
	lsl	r1, r1, #0x2
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r3]
	ldrh	r0, [r4, #0x30]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x30]
	ldrb	r1, [r3]
	lsl	r1, r1, #0x1d
	lsr	r1, r1, #0x1f
	add	r0, r4, #0
	bl	UpdateObjectEventSpriteVisibility
	mov	r1, #0x30
	ldrsh	r0, [r4, r1]
	cmp	r0, #0x38
	ble	.L135	@cond_branch
	ldrh	r1, [r4, #0x3c]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	FieldEffectStop
.L135:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe25:
	.size	 FadeFootprintsTireTracks_Step1,.Lfe25-FadeFootprintsTireTracks_Step1
	.align	2, 0
	.globl	FldEff_Splash
	.type	 FldEff_Splash,function
	.thumb_func
FldEff_Splash:
	push	{r4, r5, r6, lr}
	ldr	r6, .L138
	ldrb	r0, [r6]
	ldrb	r1, [r6, #0x4]
	ldrb	r2, [r6, #0x8]
	bl	GetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L138+0x4
	add	r5, r1, r0
	ldr	r0, .L138+0x8
	ldr	r0, [r0, #0x34]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x40
	beq	.L137	@cond_branch
	ldrb	r0, [r5, #0x5]
	bl	GetObjectEventGraphicsInfo
	lsl	r3, r4, #0x4
	add	r3, r3, r4
	lsl	r3, r3, #0x2
	ldr	r4, .L138+0xc
	add	r3, r3, r4
	mov	r1, #0x3e
	add	r1, r1, r3
	mov	ip, r1
	ldrb	r1, [r1]
	mov	r2, #0x2
	orr	r1, r1, r2
	mov	r2, ip
	strb	r1, [r2]
	ldrb	r2, [r5, #0x4]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	ldrb	r1, [r1, #0x5]
	mov	r2, #0xc
	and	r2, r2, r1
	ldrb	r4, [r3, #0x5]
	mov	r1, #0xd
	neg	r1, r1
	and	r1, r1, r4
	orr	r1, r1, r2
	strb	r1, [r3, #0x5]
	ldr	r1, [r6]
	strh	r1, [r3, #0x2e]
	ldr	r1, [r6, #0x4]
	strh	r1, [r3, #0x30]
	ldr	r1, [r6, #0x8]
	strh	r1, [r3, #0x32]
	ldrh	r0, [r0, #0xa]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x11
	sub	r0, r0, #0x4
	strh	r0, [r3, #0x26]
	mov	r0, #0x46
	bl	PlaySE
.L137:
	mov	r0, #0x0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L139:
	.align	2, 0
.L138:
	.word	gFieldEffectArguments
	.word	gObjectEvents
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe26:
	.size	 FldEff_Splash,.Lfe26-FldEff_Splash
	.align	2, 0
	.globl	UpdateSplashFieldEffect
	.type	 UpdateSplashFieldEffect,function
	.thumb_func
UpdateSplashFieldEffect:
	push	{r4, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L142	@cond_branch
	ldrh	r0, [r4, #0x2e]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r1, [r4, #0x30]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldrh	r2, [r4, #0x32]
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r3, sp
	bl	TryGetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L141	@cond_branch
.L142:
	add	r0, r4, #0
	mov	r1, #0xf
	bl	FieldEffectStop
	b	.L143
.L141:
	ldr	r3, .L144
	ldr	r2, .L144+0x4
	mov	r0, sp
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r1, [r0, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrh	r0, [r0, #0x20]
	strh	r0, [r4, #0x20]
	mov	r0, sp
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r1, [r0, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	ldrh	r0, [r0, #0x22]
	strh	r0, [r4, #0x22]
	add	r0, r4, #0
	mov	r1, #0x0
	bl	UpdateObjectEventSpriteVisibility
.L143:
	add	sp, sp, #0x4
	pop	{r4}
	pop	{r0}
	bx	r0
.L145:
	.align	2, 0
.L144:
	.word	gSprites
	.word	gObjectEvents
.Lfe27:
	.size	 UpdateSplashFieldEffect,.Lfe27-UpdateSplashFieldEffect
	.align	2, 0
	.globl	FldEff_JumpSmallSplash
	.type	 FldEff_JumpSmallSplash,function
	.thumb_func
FldEff_JumpSmallSplash:
	push	{r4, lr}
	ldr	r4, .L148
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0xc
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L148+0x4
	ldr	r0, [r0, #0x38]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	mov	r3, #0x0
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L147	@cond_branch
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L148+0x8
	add	r2, r2, r0
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r3]
	mov	r0, #0x3
	ldrb	r1, [r4, #0xc]
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r3, [r2, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
	ldr	r0, [r4, #0x8]
	strh	r0, [r2, #0x2e]
	mov	r0, #0x10
	strh	r0, [r2, #0x30]
.L147:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L149:
	.align	2, 0
.L148:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe28:
	.size	 FldEff_JumpSmallSplash,.Lfe28-FldEff_JumpSmallSplash
	.align	2, 0
	.globl	FldEff_JumpBigSplash
	.type	 FldEff_JumpBigSplash,function
	.thumb_func
FldEff_JumpBigSplash:
	push	{r4, lr}
	ldr	r4, .L152
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0x8
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L152+0x4
	ldr	r0, [r0, #0x30]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	mov	r3, #0x0
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L151	@cond_branch
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L152+0x8
	add	r2, r2, r0
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r3]
	mov	r0, #0x3
	ldrb	r1, [r4, #0xc]
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r3, [r2, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
	ldr	r0, [r4, #0x8]
	strh	r0, [r2, #0x2e]
	mov	r0, #0xe
	strh	r0, [r2, #0x30]
.L151:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L153:
	.align	2, 0
.L152:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe29:
	.size	 FldEff_JumpBigSplash,.Lfe29-FldEff_JumpBigSplash
	.align	2, 0
	.globl	FldEff_FeetInFlowingWater
	.type	 FldEff_FeetInFlowingWater,function
	.thumb_func
FldEff_FeetInFlowingWater:
	push	{r4, r5, r6, r7, lr}
	ldr	r7, .L156
	ldrb	r0, [r7]
	ldrb	r1, [r7, #0x4]
	ldrb	r2, [r7, #0x8]
	bl	GetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L156+0x4
	add	r6, r1, r0
	ldr	r0, .L156+0x8
	ldr	r0, [r0, #0x34]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	cmp	r5, #0x40
	beq	.L155	@cond_branch
	ldrb	r0, [r6, #0x5]
	bl	GetObjectEventGraphicsInfo
	add	r4, r0, #0
	lsl	r0, r5, #0x4
	add	r0, r0, r5
	lsl	r0, r0, #0x2
	ldr	r3, .L156+0xc
	add	r0, r0, r3
	ldr	r1, .L156+0x10
	str	r1, [r0, #0x1c]
	add	r5, r0, #0
	add	r5, r5, #0x3e
	ldrb	r1, [r5]
	mov	r2, #0x2
	orr	r1, r1, r2
	strb	r1, [r5]
	ldrb	r2, [r6, #0x4]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r3
	ldrb	r1, [r1, #0x5]
	mov	r2, #0xc
	and	r2, r2, r1
	ldrb	r3, [r0, #0x5]
	mov	r1, #0xd
	neg	r1, r1
	and	r1, r1, r3
	orr	r1, r1, r2
	strb	r1, [r0, #0x5]
	ldr	r1, [r7]
	strh	r1, [r0, #0x2e]
	ldr	r1, [r7, #0x4]
	strh	r1, [r0, #0x30]
	ldr	r1, [r7, #0x8]
	strh	r1, [r0, #0x32]
	ldr	r1, .L156+0x14
	strh	r1, [r0, #0x34]
	mov	r1, #0x1
	neg	r1, r1
	strh	r1, [r0, #0x36]
	ldrh	r1, [r4, #0xa]
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x11
	sub	r1, r1, #0x4
	strh	r1, [r0, #0x26]
	mov	r1, #0x1
	bl	StartSpriteAnim
.L155:
	mov	r0, #0x0
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L157:
	.align	2, 0
.L156:
	.word	gFieldEffectArguments
	.word	gObjectEvents
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
	.word	UpdateFeetInFlowingWaterFieldEffect
	.word	0xffff
.Lfe30:
	.size	 FldEff_FeetInFlowingWater,.Lfe30-FldEff_FeetInFlowingWater
	.align	2, 0
	.type	 UpdateFeetInFlowingWaterFieldEffect,function
	.thumb_func
UpdateFeetInFlowingWaterFieldEffect:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	ldrh	r0, [r4, #0x2e]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r1, [r4, #0x30]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldrh	r2, [r4, #0x32]
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r3, sp
	bl	TryGetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L160	@cond_branch
	ldr	r2, .L164
	mov	r0, sp
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r5, r0, r2
	ldrb	r0, [r5, #0x2]
	lsl	r0, r0, #0x1c
	cmp	r0, #0
	blt	.L159	@cond_branch
.L160:
	add	r0, r4, #0
	mov	r1, #0x22
	bl	FieldEffectStop
	b	.L161
.L165:
	.align	2, 0
.L164:
	.word	gObjectEvents
.L159:
	ldrb	r1, [r5, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L166
	add	r0, r0, r1
	ldrh	r1, [r0, #0x20]
	strh	r1, [r4, #0x20]
	ldrh	r1, [r0, #0x22]
	strh	r1, [r4, #0x22]
	add	r0, r0, #0x43
	ldrb	r0, [r0]
	add	r1, r4, #0
	add	r1, r1, #0x43
	strb	r0, [r1]
	add	r0, r4, #0
	mov	r1, #0x0
	bl	UpdateObjectEventSpriteVisibility
	ldr	r1, [r5, #0x10]
	ldr	r0, [r4, #0x34]
	cmp	r1, r0
	beq	.L161	@cond_branch
	ldrh	r0, [r5, #0x10]
	strh	r0, [r4, #0x34]
	ldrh	r0, [r5, #0x12]
	strh	r0, [r4, #0x36]
	add	r0, r4, #0
	add	r0, r0, #0x3e
	ldrb	r1, [r0]
	mov	r0, #0x4
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L161	@cond_branch
	mov	r0, #0x46
	bl	PlaySE
.L161:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L167:
	.align	2, 0
.L166:
	.word	gSprites
.Lfe31:
	.size	 UpdateFeetInFlowingWaterFieldEffect,.Lfe31-UpdateFeetInFlowingWaterFieldEffect
	.align	2, 0
	.globl	FldEff_Ripple
	.type	 FldEff_Ripple,function
	.thumb_func
FldEff_Ripple:
	push	{r4, lr}
	ldr	r0, .L170
	ldr	r0, [r0, #0x14]
	ldr	r4, .L170+0x4
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	ldrb	r3, [r4, #0x8]
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L169	@cond_branch
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L170+0x8
	add	r2, r2, r0
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r3]
	mov	r0, #0x3
	ldrb	r1, [r4, #0xc]
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r3, [r2, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
	mov	r0, #0x5
	strh	r0, [r2, #0x2e]
.L169:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L171:
	.align	2, 0
.L170:
	.word	gFieldEffectObjectTemplatePointers
	.word	gFieldEffectArguments
	.word	gSprites
.Lfe32:
	.size	 FldEff_Ripple,.Lfe32-FldEff_Ripple
	.align	2, 0
	.globl	FldEff_HotSpringsWater
	.type	 FldEff_HotSpringsWater,function
	.thumb_func
FldEff_HotSpringsWater:
	push	{r4, r5, r6, lr}
	ldr	r6, .L174
	ldrb	r0, [r6]
	ldrb	r1, [r6, #0x4]
	ldrb	r2, [r6, #0x8]
	bl	GetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L174+0x4
	add	r5, r1, r0
	ldr	r0, .L174+0x8
	ldr	r0, [r0, #0x7c]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L173	@cond_branch
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r4, .L174+0xc
	add	r2, r2, r4
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r3]
	ldrb	r1, [r5, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldrb	r0, [r0, #0x5]
	mov	r1, #0xc
	and	r1, r1, r0
	ldrb	r3, [r2, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
	ldr	r0, [r6]
	strh	r0, [r2, #0x2e]
	ldr	r0, [r6, #0x4]
	strh	r0, [r2, #0x30]
	ldr	r0, [r6, #0x8]
	strh	r0, [r2, #0x32]
	ldrb	r1, [r5, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldrh	r0, [r0, #0x20]
	strh	r0, [r2, #0x34]
	ldrb	r1, [r5, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldrh	r0, [r0, #0x22]
	strh	r0, [r2, #0x36]
.L173:
	mov	r0, #0x0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.L175:
	.align	2, 0
.L174:
	.word	gFieldEffectArguments
	.word	gObjectEvents
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe33:
	.size	 FldEff_HotSpringsWater,.Lfe33-FldEff_HotSpringsWater
	.align	2, 0
	.globl	UpdateHotSpringsWaterFieldEffect
	.type	 UpdateHotSpringsWaterFieldEffect,function
	.thumb_func
UpdateHotSpringsWaterFieldEffect:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	ldrh	r0, [r4, #0x2e]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r1, [r4, #0x30]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldrh	r2, [r4, #0x32]
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r3, sp
	bl	TryGetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L178	@cond_branch
	ldr	r5, .L180
	mov	r0, sp
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r0, r5
	ldrb	r0, [r1, #0x2]
	lsl	r0, r0, #0x1a
	cmp	r0, #0
	blt	.L177	@cond_branch
.L178:
	add	r0, r4, #0
	mov	r1, #0x2a
	bl	FieldEffectStop
	b	.L179
.L181:
	.align	2, 0
.L180:
	.word	gObjectEvents
.L177:
	ldrb	r0, [r1, #0x5]
	bl	GetObjectEventGraphicsInfo
	mov	r1, sp
	ldrb	r2, [r1]
	lsl	r1, r2, #0x3
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r5
	ldrb	r2, [r1, #0x4]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	ldr	r2, .L182
	add	r1, r1, r2
	ldrh	r2, [r1, #0x20]
	strh	r2, [r4, #0x20]
	ldrh	r0, [r0, #0xa]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x11
	ldrh	r2, [r1, #0x22]
	add	r0, r0, r2
	sub	r0, r0, #0x8
	strh	r0, [r4, #0x22]
	add	r1, r1, #0x43
	ldrb	r0, [r1]
	sub	r0, r0, #0x1
	add	r1, r4, #0
	add	r1, r1, #0x43
	strb	r0, [r1]
	add	r0, r4, #0
	mov	r1, #0x0
	bl	UpdateObjectEventSpriteVisibility
.L179:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L183:
	.align	2, 0
.L182:
	.word	gSprites
.Lfe34:
	.size	 UpdateHotSpringsWaterFieldEffect,.Lfe34-UpdateHotSpringsWaterFieldEffect
	.align	2, 0
	.globl	FldEff_UnusedGrass
	.type	 FldEff_UnusedGrass,function
	.thumb_func
FldEff_UnusedGrass:
	push	{r4, lr}
	ldr	r4, .L186
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0x8
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L186+0x4
	ldr	r0, [r0, #0x44]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	ldrb	r3, [r4, #0x8]
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L185	@cond_branch
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L186+0x8
	add	r2, r2, r0
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r3]
	mov	r0, #0x3
	ldrb	r1, [r4, #0xc]
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r3, [r2, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
	mov	r0, #0x13
	strh	r0, [r2, #0x2e]
.L185:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L187:
	.align	2, 0
.L186:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe35:
	.size	 FldEff_UnusedGrass,.Lfe35-FldEff_UnusedGrass
	.align	2, 0
	.globl	FldEff_UnusedGrass2
	.type	 FldEff_UnusedGrass2,function
	.thumb_func
FldEff_UnusedGrass2:
	push	{r4, lr}
	ldr	r4, .L190
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0x8
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L190+0x4
	ldr	r0, [r0, #0x48]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	ldrb	r3, [r4, #0x8]
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L189	@cond_branch
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L190+0x8
	add	r2, r2, r0
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r3]
	mov	r0, #0x3
	ldrb	r1, [r4, #0xc]
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r3, [r2, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
	mov	r0, #0x14
	strh	r0, [r2, #0x2e]
.L189:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L191:
	.align	2, 0
.L190:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe36:
	.size	 FldEff_UnusedGrass2,.Lfe36-FldEff_UnusedGrass2
	.align	2, 0
	.globl	FldEff_UnusedSand
	.type	 FldEff_UnusedSand,function
	.thumb_func
FldEff_UnusedSand:
	push	{r4, lr}
	ldr	r4, .L194
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0x8
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L194+0x4
	ldr	r0, [r0, #0x4c]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	ldrb	r3, [r4, #0x8]
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L193	@cond_branch
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L194+0x8
	add	r2, r2, r0
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r3]
	mov	r0, #0x3
	ldrb	r1, [r4, #0xc]
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r3, [r2, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
	mov	r0, #0x15
	strh	r0, [r2, #0x2e]
.L193:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L195:
	.align	2, 0
.L194:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe37:
	.size	 FldEff_UnusedSand,.Lfe37-FldEff_UnusedSand
	.align	2, 0
	.globl	FldEff_WaterSurfacing
	.type	 FldEff_WaterSurfacing,function
	.thumb_func
FldEff_WaterSurfacing:
	push	{r4, lr}
	ldr	r4, .L198
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0x8
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L198+0x4
	ldr	r0, [r0, #0x50]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	ldrb	r3, [r4, #0x8]
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L197	@cond_branch
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L198+0x8
	add	r2, r2, r0
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r3]
	mov	r0, #0x3
	ldrb	r1, [r4, #0xc]
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r3, [r2, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
	mov	r0, #0x16
	strh	r0, [r2, #0x2e]
.L197:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L199:
	.align	2, 0
.L198:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe38:
	.size	 FldEff_WaterSurfacing,.Lfe38-FldEff_WaterSurfacing
	.align	2, 0
	.globl	StartAshFieldEffect
	.type	 StartAshFieldEffect,function
	.thumb_func
StartAshFieldEffect:
	push	{r4, lr}
	lsl	r2, r2, #0x10
	lsr	r2, r2, #0x10
	ldr	r4, .L201
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	str	r0, [r4]
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	str	r1, [r4, #0x4]
	mov	r0, #0x52
	str	r0, [r4, #0x8]
	mov	r0, #0x1
	str	r0, [r4, #0xc]
	str	r2, [r4, #0x10]
	lsl	r3, r3, #0x10
	asr	r3, r3, #0x10
	str	r3, [r4, #0x14]
	mov	r0, #0x7
	bl	FieldEffectStart
	pop	{r4}
	pop	{r0}
	bx	r0
.L202:
	.align	2, 0
.L201:
	.word	gFieldEffectArguments
.Lfe39:
	.size	 StartAshFieldEffect,.Lfe39-StartAshFieldEffect
	.align	2, 0
	.globl	FldEff_Ash
	.type	 FldEff_Ash,function
	.thumb_func
FldEff_Ash:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	ldr	r5, .L205
	ldrh	r1, [r5]
	mov	r0, sp
	strh	r1, [r0]
	ldrh	r0, [r5, #0x4]
	mov	r4, sp
	add	r4, r4, #0x2
	strh	r0, [r4]
	mov	r0, sp
	add	r1, r4, #0
	mov	r2, #0x8
	mov	r3, #0x8
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L205+0x4
	ldr	r0, [r0, #0x18]
	mov	r1, sp
	mov	r2, #0x0
	ldrsh	r1, [r1, r2]
	mov	r3, #0x0
	ldrsh	r2, [r4, r3]
	ldrb	r3, [r5, #0x8]
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L204	@cond_branch
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L205+0x8
	add	r2, r2, r0
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r3]
	mov	r0, #0x3
	ldrb	r1, [r5, #0xc]
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r3, [r2, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
	ldr	r0, [r5]
	strh	r0, [r2, #0x30]
	ldr	r0, [r5, #0x4]
	strh	r0, [r2, #0x32]
	ldr	r0, [r5, #0x10]
	strh	r0, [r2, #0x34]
	ldr	r0, [r5, #0x14]
	strh	r0, [r2, #0x36]
.L204:
	mov	r0, #0x0
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L206:
	.align	2, 0
.L205:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe40:
	.size	 FldEff_Ash,.Lfe40-FldEff_Ash
	.globl	gAshFieldEffectFuncs
	.section .rodata
	.align	2, 0
	.type	 gAshFieldEffectFuncs,object
gAshFieldEffectFuncs:
	.word	UpdateAshFieldEffect_Step0
	.word	UpdateAshFieldEffect_Step1
	.word	UpdateAshFieldEffect_Step2
	.size	 gAshFieldEffectFuncs,12
.text
	.align	2, 0
	.globl	UpdateAshFieldEffect
	.type	 UpdateAshFieldEffect,function
	.thumb_func
UpdateAshFieldEffect:
	push	{lr}
	ldr	r2, .L208
	mov	r3, #0x2e
	ldrsh	r1, [r0, r3]
	lsl	r1, r1, #0x2
	add	r1, r1, r2
	ldr	r1, [r1]
	bl	_call_via_r1
	pop	{r0}
	bx	r0
.L209:
	.align	2, 0
.L208:
	.word	gAshFieldEffectFuncs
.Lfe41:
	.size	 UpdateAshFieldEffect,.Lfe41-UpdateAshFieldEffect
	.align	2, 0
	.type	 UpdateAshFieldEffect_Step0,function
	.thumb_func
UpdateAshFieldEffect_Step0:
	push	{lr}
	add	r3, r0, #0
	add	r2, r3, #0
	add	r2, r2, #0x3e
	ldrb	r0, [r2]
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r2]
	sub	r2, r2, #0x12
	ldrb	r0, [r2]
	mov	r1, #0x40
	orr	r0, r0, r1
	strb	r0, [r2]
	ldrh	r0, [r3, #0x36]
	sub	r0, r0, #0x1
	strh	r0, [r3, #0x36]
	lsl	r0, r0, #0x10
	cmp	r0, #0
	bne	.L211	@cond_branch
	mov	r0, #0x1
	strh	r0, [r3, #0x2e]
.L211:
	pop	{r0}
	bx	r0
.Lfe42:
	.size	 UpdateAshFieldEffect_Step0,.Lfe42-UpdateAshFieldEffect_Step0
	.align	2, 0
	.type	 UpdateAshFieldEffect_Step1,function
	.thumb_func
UpdateAshFieldEffect_Step1:
	push	{r4, lr}
	add	r4, r0, #0
	add	r2, r4, #0
	add	r2, r2, #0x3e
	ldrb	r1, [r2]
	mov	r0, #0x5
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2]
	sub	r2, r2, #0x12
	ldrb	r1, [r2]
	mov	r0, #0x41
	neg	r0, r0
	and	r0, r0, r1
	strb	r0, [r2]
	mov	r1, #0x30
	ldrsh	r0, [r4, r1]
	mov	r2, #0x32
	ldrsh	r1, [r4, r2]
	ldrh	r2, [r4, #0x34]
	bl	MapGridSetMetatileIdAt
	mov	r1, #0x30
	ldrsh	r0, [r4, r1]
	mov	r2, #0x32
	ldrsh	r1, [r4, r2]
	bl	CurrentMapDrawMetatileAt
	ldr	r2, .L213
	ldr	r0, .L213+0x4
	ldrb	r1, [r0, #0x5]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r1, [r0]
	mov	r2, #0x4
	orr	r1, r1, r2
	strb	r1, [r0]
	mov	r0, #0x2
	strh	r0, [r4, #0x2e]
	pop	{r4}
	pop	{r0}
	bx	r0
.L214:
	.align	2, 0
.L213:
	.word	gObjectEvents
	.word	gPlayerAvatar
.Lfe43:
	.size	 UpdateAshFieldEffect_Step1,.Lfe43-UpdateAshFieldEffect_Step1
	.align	2, 0
	.type	 UpdateAshFieldEffect_Step2,function
	.thumb_func
UpdateAshFieldEffect_Step2:
	push	{r4, lr}
	add	r4, r0, #0
	mov	r1, #0x0
	bl	UpdateObjectEventSpriteVisibility
	add	r0, r4, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L216	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x7
	bl	FieldEffectStop
.L216:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe44:
	.size	 UpdateAshFieldEffect_Step2,.Lfe44-UpdateAshFieldEffect_Step2
	.align	2, 0
	.globl	FldEff_SurfBlob
	.type	 FldEff_SurfBlob,function
	.thumb_func
FldEff_SurfBlob:
	push	{r4, r5, lr}
	ldr	r4, .L219
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0x8
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L219+0x4
	ldr	r0, [r0, #0x1c]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	mov	r3, #0x96
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r5, r0, #0
	cmp	r0, #0x40
	beq	.L218	@cond_branch
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L219+0x8
	add	r1, r1, r0
	add	r3, r1, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r2, #0x2
	orr	r0, r0, r2
	strb	r0, [r3]
	ldrb	r2, [r1, #0x5]
	mov	r0, #0xf
	and	r0, r0, r2
	strb	r0, [r1, #0x5]
	ldr	r0, [r4, #0x8]
	strh	r0, [r1, #0x32]
	ldr	r0, .L219+0xc
	strh	r0, [r1, #0x34]
	mov	r0, #0x1
	neg	r0, r0
	strh	r0, [r1, #0x3a]
	strh	r0, [r1, #0x3c]
.L218:
	mov	r0, #0x8
	bl	FieldEffectActiveListRemove
	add	r0, r5, #0
	pop	{r4, r5}
	pop	{r1}
	bx	r1
.L220:
	.align	2, 0
.L219:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
	.word	0xffff
.Lfe45:
	.size	 FldEff_SurfBlob,.Lfe45-FldEff_SurfBlob
	.align	2, 0
	.globl	SetSurfBobState
	.type	 SetSurfBobState,function
	.thumb_func
SetSurfBobState:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x18
	ldr	r3, .L222
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r2, r2, r3
	ldrh	r0, [r2, #0x2e]
	mov	r3, #0x10
	neg	r3, r3
	and	r3, r3, r0
	mov	r0, #0xf0
	lsl	r0, r0, #0x14
	and	r0, r0, r1
	lsr	r0, r0, #0x18
	orr	r0, r0, r3
	strh	r0, [r2, #0x2e]
	bx	lr
.L223:
	.align	2, 0
.L222:
	.word	gSprites
.Lfe46:
	.size	 SetSurfBobState,.Lfe46-SetSurfBobState
	.align	2, 0
	.globl	SetSurfBobWhileFlyingOutState
	.type	 SetSurfBobWhileFlyingOutState,function
	.thumb_func
SetSurfBobWhileFlyingOutState:
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x18
	ldr	r3, .L225
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	add	r2, r2, r3
	ldrh	r0, [r2, #0x2e]
	mov	r3, #0xf1
	neg	r3, r3
	and	r3, r3, r0
	mov	r0, #0xf0
	lsl	r0, r0, #0x14
	and	r0, r0, r1
	lsr	r0, r0, #0x14
	orr	r3, r3, r0
	strh	r3, [r2, #0x2e]
	bx	lr
.L226:
	.align	2, 0
.L225:
	.word	gSprites
.Lfe47:
	.size	 SetSurfBobWhileFlyingOutState,.Lfe47-SetSurfBobWhileFlyingOutState
	.align	2, 0
	.globl	SetSurfBobWhileFishingState
	.type	 SetSurfBobWhileFishingState,function
	.thumb_func
SetSurfBobWhileFishingState:
	push	{r4, lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r1, #0x18
	ldr	r4, .L228
	lsl	r3, r0, #0x4
	add	r3, r3, r0
	lsl	r3, r3, #0x2
	add	r3, r3, r4
	ldrh	r0, [r3, #0x2e]
	ldr	r4, .L228+0x4
	and	r4, r4, r0
	mov	r0, #0xf0
	lsl	r0, r0, #0x14
	and	r0, r0, r1
	lsr	r0, r0, #0x10
	orr	r4, r4, r0
	strh	r4, [r3, #0x2e]
	strh	r2, [r3, #0x30]
	pop	{r4}
	pop	{r0}
	bx	r0
.L229:
	.align	2, 0
.L228:
	.word	gSprites
	.word	-0xf01
.Lfe48:
	.size	 SetSurfBobWhileFishingState,.Lfe48-SetSurfBobWhileFishingState
	.align	2, 0
	.type	 GetSurfBobState,function
	.thumb_func
GetSurfBobState:
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0xf
	and	r0, r0, r1
	bx	lr
.Lfe49:
	.size	 GetSurfBobState,.Lfe49-GetSurfBobState
	.align	2, 0
	.type	 GetSurfBobWhileFlyingOutState,function
	.thumb_func
GetSurfBobWhileFlyingOutState:
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0xf0
	and	r0, r0, r1
	lsr	r0, r0, #0x4
	bx	lr
.Lfe50:
	.size	 GetSurfBobWhileFlyingOutState,.Lfe50-GetSurfBobWhileFlyingOutState
	.align	2, 0
	.type	 GetSurfBobWhileFishingState,function
	.thumb_func
GetSurfBobWhileFishingState:
	ldrh	r1, [r0, #0x2e]
	mov	r0, #0xf0
	lsl	r0, r0, #0x4
	and	r0, r0, r1
	lsr	r0, r0, #0x8
	bx	lr
.Lfe51:
	.size	 GetSurfBobWhileFishingState,.Lfe51-GetSurfBobWhileFishingState
	.align	2, 0
	.globl	UpdateSurfBlobFieldEffect
	.type	 UpdateSurfBlobFieldEffect,function
	.thumb_func
UpdateSurfBlobFieldEffect:
	push	{r4, r5, r6, lr}
	add	r6, r0, #0
	mov	r1, #0x32
	ldrsh	r0, [r6, r1]
	lsl	r4, r0, #0x3
	add	r4, r4, r0
	lsl	r4, r4, #0x2
	ldr	r0, .L234
	add	r4, r4, r0
	ldrb	r0, [r4, #0x4]
	lsl	r5, r0, #0x4
	add	r5, r5, r0
	lsl	r5, r5, #0x2
	ldr	r0, .L234+0x4
	add	r5, r5, r0
	add	r0, r4, #0
	add	r1, r6, #0
	bl	SynchroniseSurfAnim
	add	r0, r4, #0
	add	r1, r6, #0
	bl	sub_81556E8
	add	r0, r4, #0
	add	r1, r5, #0
	add	r2, r6, #0
	bl	CreateBobbingEffect
	ldrb	r0, [r5, #0x5]
	mov	r1, #0xc
	and	r1, r1, r0
	ldrb	r2, [r6, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	orr	r0, r0, r1
	strb	r0, [r6, #0x5]
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L235:
	.align	2, 0
.L234:
	.word	gObjectEvents
	.word	gSprites
.Lfe52:
	.size	 UpdateSurfBlobFieldEffect,.Lfe52-UpdateSurfBlobFieldEffect
	.section .rodata
.LC213:
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x2
	.byte	0x3
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x1
.text
	.align	2, 0
	.globl	SynchroniseSurfAnim
	.type	 SynchroniseSurfAnim,function
	.thumb_func
SynchroniseSurfAnim:
	push	{r4, r5, lr}
	add	sp, sp, #-0xc
	add	r5, r0, #0
	add	r4, r1, #0
	ldr	r1, .L238
	mov	r0, sp
	mov	r2, #0x9
	bl	memcpy
	add	r0, r4, #0
	bl	GetSurfBobWhileFlyingOutState
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L237	@cond_branch
	ldrb	r0, [r5, #0x18]
	lsr	r0, r0, #0x4
	add	r0, r0, sp
	ldrb	r1, [r0]
	add	r0, r4, #0
	bl	StartSpriteAnimIfDifferent
.L237:
	add	sp, sp, #0xc
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L239:
	.align	2, 0
.L238:
	.word	.LC213
.Lfe53:
	.size	 SynchroniseSurfAnim,.Lfe53-SynchroniseSurfAnim
	.align	2, 0
	.globl	sub_81556E8
	.type	 sub_81556E8,function
	.thumb_func
sub_81556E8:
	push	{r4, r5, r6, r7, lr}
	mov	r7, r8
	push	{r7}
	add	sp, sp, #-0x4
	add	r4, r1, #0
	ldrh	r2, [r0, #0x10]
	mov	r1, sp
	strh	r2, [r1]
	ldrh	r1, [r0, #0x12]
	mov	r0, sp
	add	r0, r0, #0x2
	strh	r1, [r0]
	mov	r2, #0x26
	ldrsh	r3, [r4, r2]
	mov	r8, r0
	cmp	r3, #0
	bne	.L241	@cond_branch
	mov	r0, sp
	mov	r5, #0x0
	ldrsh	r2, [r0, r5]
	mov	r5, #0x3a
	ldrsh	r0, [r4, r5]
	cmp	r2, r0
	bne	.L242	@cond_branch
	lsl	r0, r1, #0x10
	asr	r0, r0, #0x10
	mov	r5, #0x3c
	ldrsh	r1, [r4, r5]
	cmp	r0, r1
	beq	.L241	@cond_branch
.L242:
	strh	r3, [r4, #0x38]
	strh	r2, [r4, #0x3a]
	mov	r1, r8
	mov	r2, #0x0
	ldrsh	r0, [r1, r2]
	strh	r0, [r4, #0x3c]
	mov	r5, #0x1
	mov	r7, r8
	mov	r6, sp
.L246:
	add	r0, r5, #0
	mov	r1, sp
	add	r2, r7, #0
	bl	MoveCoords
	mov	r1, #0x0
	ldrsh	r0, [r6, r1]
	mov	r2, #0x0
	ldrsh	r1, [r7, r2]
	bl	MapGridGetZCoordAt
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x3
	bne	.L245	@cond_branch
	ldrh	r0, [r4, #0x38]
	add	r0, r0, #0x1
	strh	r0, [r4, #0x38]
	b	.L241
.L245:
	add	r0, r5, #0x1
	lsl	r0, r0, #0x18
	lsr	r5, r0, #0x18
	ldrh	r0, [r4, #0x3a]
	strh	r0, [r6]
	ldrh	r0, [r4, #0x3c]
	mov	r1, r8
	strh	r0, [r1]
	cmp	r5, #0x4
	bls	.L246	@cond_branch
.L241:
	add	sp, sp, #0x4
	pop	{r3}
	mov	r8, r3
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe54:
	.size	 sub_81556E8,.Lfe54-sub_81556E8
	.section .rodata
	.align	1, 0
.LC215:
	.short	0x3
	.short	0x7
.text
	.align	2, 0
	.type	 CreateBobbingEffect,function
	.thumb_func
CreateBobbingEffect:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	add	r5, r1, #0
	add	r4, r2, #0
	ldr	r1, .L257
	mov	r0, sp
	mov	r2, #0x4
	bl	memcpy
	add	r0, r4, #0
	bl	GetSurfBobState
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r2, r0, #0
	cmp	r2, #0
	beq	.L250	@cond_branch
	ldrh	r1, [r4, #0x36]
	add	r1, r1, #0x1
	strh	r1, [r4, #0x36]
	mov	r3, #0x38
	ldrsh	r0, [r4, r3]
	lsl	r0, r0, #0x1
	add	r0, r0, sp
	ldrh	r0, [r0]
	and	r1, r1, r0
	cmp	r1, #0
	bne	.L251	@cond_branch
	ldrh	r0, [r4, #0x34]
	ldrh	r1, [r4, #0x26]
	add	r0, r0, r1
	strh	r0, [r4, #0x26]
.L251:
	ldrh	r1, [r4, #0x36]
	mov	r0, #0xf
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L252	@cond_branch
	ldrh	r0, [r4, #0x34]
	neg	r0, r0
	strh	r0, [r4, #0x34]
.L252:
	cmp	r2, #0x2
	beq	.L250	@cond_branch
	add	r0, r4, #0
	bl	GetSurfBobWhileFishingState
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L254	@cond_branch
	ldrh	r0, [r4, #0x26]
	b	.L256
.L258:
	.align	2, 0
.L257:
	.word	.LC215
.L254:
	ldrh	r0, [r4, #0x26]
	ldrh	r3, [r4, #0x30]
	add	r0, r0, r3
.L256:
	strh	r0, [r5, #0x26]
	ldrh	r0, [r5, #0x20]
	strh	r0, [r4, #0x20]
	ldrh	r0, [r5, #0x22]
	add	r0, r0, #0x8
	strh	r0, [r4, #0x22]
.L250:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.Lfe55:
	.size	 CreateBobbingEffect,.Lfe55-CreateBobbingEffect
	.align	2, 0
	.globl	sub_8155800
	.type	 sub_8155800,function
	.thumb_func
sub_8155800:
	push	{r4, lr}
	add	r4, r0, #0
	lsl	r4, r4, #0x18
	lsr	r4, r4, #0x18
	ldr	r0, .L260
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0xff
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r1, .L260+0x4
	add	r2, r2, r1
	ldr	r1, .L260+0x8
	str	r1, [r2, #0x1c]
	mov	r1, #0x3e
	add	r1, r1, r2
	mov	ip, r1
	ldrb	r1, [r1]
	mov	r3, #0x4
	orr	r1, r1, r3
	mov	r3, ip
	strb	r1, [r3]
	strh	r4, [r2, #0x2e]
	mov	r1, #0x1
	strh	r1, [r2, #0x30]
	pop	{r4}
	pop	{r1}
	bx	r1
.L261:
	.align	2, 0
.L260:
	.word	gDummySpriteTemplate
	.word	gSprites
	.word	sub_8155850
.Lfe56:
	.size	 sub_8155800,.Lfe56-sub_8155800
	.align	2, 0
	.type	 sub_8155850,function
	.thumb_func
sub_8155850:
	push	{lr}
	add	r2, r0, #0
	mov	r0, #0x2e
	ldrsh	r1, [r2, r0]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L265
	add	r3, r0, r1
	ldrh	r1, [r2, #0x32]
	add	r0, r1, #0x1
	strh	r0, [r2, #0x32]
	mov	r0, #0x3
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L263	@cond_branch
	ldrh	r0, [r2, #0x30]
	ldrh	r1, [r3, #0x26]
	add	r0, r0, r1
	strh	r0, [r3, #0x26]
.L263:
	ldrh	r1, [r2, #0x32]
	mov	r0, #0xf
	and	r0, r0, r1
	cmp	r0, #0
	bne	.L264	@cond_branch
	ldrh	r0, [r2, #0x30]
	neg	r0, r0
	strh	r0, [r2, #0x30]
.L264:
	pop	{r0}
	bx	r0
.L266:
	.align	2, 0
.L265:
	.word	gSprites
.Lfe57:
	.size	 sub_8155850,.Lfe57-sub_8155850
	.align	2, 0
	.globl	FldEff_Dust
	.type	 FldEff_Dust,function
	.thumb_func
FldEff_Dust:
	push	{r4, lr}
	ldr	r4, .L269
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0xc
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L269+0x4
	ldr	r0, [r0, #0x24]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	mov	r3, #0x0
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L268	@cond_branch
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L269+0x8
	add	r2, r2, r0
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r3]
	mov	r0, #0x3
	ldrb	r1, [r4, #0xc]
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r3, [r2, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
	ldr	r0, [r4, #0x8]
	strh	r0, [r2, #0x2e]
	mov	r0, #0xa
	strh	r0, [r2, #0x30]
.L268:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L270:
	.align	2, 0
.L269:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe58:
	.size	 FldEff_Dust,.Lfe58-FldEff_Dust
	.align	2, 0
	.globl	FldEff_SandPile
	.type	 FldEff_SandPile,function
	.thumb_func
FldEff_SandPile:
	push	{r4, r5, r6, r7, lr}
	ldr	r7, .L273
	ldrb	r0, [r7]
	ldrb	r1, [r7, #0x4]
	ldrb	r2, [r7, #0x8]
	bl	GetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r1, r0, #0x3
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L273+0x4
	add	r6, r1, r0
	ldr	r0, .L273+0x8
	ldr	r0, [r0, #0x74]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	cmp	r4, #0x40
	beq	.L272	@cond_branch
	ldrb	r0, [r6, #0x5]
	bl	GetObjectEventGraphicsInfo
	add	r5, r0, #0
	lsl	r0, r4, #0x4
	add	r0, r0, r4
	lsl	r0, r0, #0x2
	ldr	r4, .L273+0xc
	add	r0, r0, r4
	add	r3, r0, #0
	add	r3, r3, #0x3e
	ldrb	r1, [r3]
	mov	r2, #0x2
	orr	r1, r1, r2
	strb	r1, [r3]
	ldrb	r2, [r6, #0x4]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	ldrb	r1, [r1, #0x5]
	mov	r2, #0xc
	and	r2, r2, r1
	ldrb	r3, [r0, #0x5]
	mov	r1, #0xd
	neg	r1, r1
	and	r1, r1, r3
	orr	r1, r1, r2
	strb	r1, [r0, #0x5]
	ldr	r1, [r7]
	strh	r1, [r0, #0x2e]
	ldr	r1, [r7, #0x4]
	strh	r1, [r0, #0x30]
	ldr	r1, [r7, #0x8]
	strh	r1, [r0, #0x32]
	ldrb	r2, [r6, #0x4]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	ldrh	r1, [r1, #0x20]
	strh	r1, [r0, #0x34]
	ldrb	r2, [r6, #0x4]
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	ldrh	r1, [r1, #0x22]
	strh	r1, [r0, #0x36]
	ldrh	r1, [r5, #0xa]
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x11
	sub	r1, r1, #0x2
	strh	r1, [r0, #0x26]
	mov	r1, #0x2
	bl	SeekSpriteAnim
.L272:
	mov	r0, #0x0
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L274:
	.align	2, 0
.L273:
	.word	gFieldEffectArguments
	.word	gObjectEvents
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe59:
	.size	 FldEff_SandPile,.Lfe59-FldEff_SandPile
	.align	2, 0
	.globl	UpdateSandPileFieldEffect
	.type	 UpdateSandPileFieldEffect,function
	.thumb_func
UpdateSandPileFieldEffect:
	push	{r4, r5, r6, lr}
	add	sp, sp, #-0x4
	add	r4, r0, #0
	ldrh	r0, [r4, #0x2e]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r1, [r4, #0x30]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldrh	r2, [r4, #0x32]
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r3, sp
	bl	TryGetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	cmp	r0, #0
	bne	.L277	@cond_branch
	ldr	r2, .L282
	mov	r0, sp
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r1, r0, r2
	ldrb	r0, [r1, #0x2]
	lsl	r0, r0, #0x1b
	cmp	r0, #0
	blt	.L276	@cond_branch
.L277:
	add	r0, r4, #0
	mov	r1, #0x27
	bl	FieldEffectStop
	b	.L278
.L283:
	.align	2, 0
.L282:
	.word	gObjectEvents
.L276:
	ldr	r2, .L284
	ldrb	r1, [r1, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrh	r5, [r0, #0x22]
	ldrh	r6, [r0, #0x20]
	mov	r2, #0x20
	ldrsh	r1, [r0, r2]
	mov	r2, #0x34
	ldrsh	r0, [r4, r2]
	cmp	r1, r0
	bne	.L280	@cond_branch
	lsl	r0, r5, #0x10
	asr	r0, r0, #0x10
	mov	r2, #0x36
	ldrsh	r1, [r4, r2]
	cmp	r0, r1
	beq	.L279	@cond_branch
.L280:
	strh	r6, [r4, #0x34]
	strh	r5, [r4, #0x36]
	add	r0, r4, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L279	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x0
	bl	StartSpriteAnim
.L279:
	strh	r6, [r4, #0x20]
	strh	r5, [r4, #0x22]
	ldr	r3, .L284
	ldr	r2, .L284+0x4
	mov	r0, sp
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrb	r1, [r0, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r3
	add	r0, r0, #0x43
	ldrb	r0, [r0]
	add	r1, r4, #0
	add	r1, r1, #0x43
	strb	r0, [r1]
	add	r0, r4, #0
	mov	r1, #0x0
	bl	UpdateObjectEventSpriteVisibility
.L278:
	add	sp, sp, #0x4
	pop	{r4, r5, r6}
	pop	{r0}
	bx	r0
.L285:
	.align	2, 0
.L284:
	.word	gSprites
	.word	gObjectEvents
.Lfe60:
	.size	 UpdateSandPileFieldEffect,.Lfe60-UpdateSandPileFieldEffect
	.align	2, 0
	.globl	FldEff_Bubbles
	.type	 FldEff_Bubbles,function
	.thumb_func
FldEff_Bubbles:
	push	{r4, lr}
	ldr	r4, .L288
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0x0
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L288+0x4
	add	r0, r0, #0x88
	ldr	r0, [r0]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	mov	r3, #0x52
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L287	@cond_branch
	lsl	r1, r0, #0x4
	add	r1, r1, r0
	lsl	r1, r1, #0x2
	ldr	r0, .L288+0x8
	add	r1, r1, r0
	add	r3, r1, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r2, #0x2
	orr	r0, r0, r2
	strb	r0, [r3]
	ldrb	r2, [r1, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r2
	mov	r2, #0x4
	orr	r0, r0, r2
	strb	r0, [r1, #0x5]
.L287:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L289:
	.align	2, 0
.L288:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe61:
	.size	 FldEff_Bubbles,.Lfe61-FldEff_Bubbles
	.align	2, 0
	.globl	UpdateBubblesFieldEffect
	.type	 UpdateBubblesFieldEffect,function
	.thumb_func
UpdateBubblesFieldEffect:
	push	{r4, lr}
	add	r4, r0, #0
	ldrh	r0, [r4, #0x2e]
	add	r0, r0, #0x80
	mov	r1, #0x80
	lsl	r1, r1, #0x1
	and	r0, r0, r1
	strh	r0, [r4, #0x2e]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x18
	ldrh	r1, [r4, #0x22]
	sub	r1, r1, r0
	strh	r1, [r4, #0x22]
	add	r0, r4, #0
	mov	r1, #0x0
	bl	UpdateObjectEventSpriteVisibility
	ldrh	r1, [r4, #0x3e]
	ldr	r0, .L292
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L291	@cond_branch
	add	r0, r4, #0
	mov	r1, #0x35
	bl	FieldEffectStop
.L291:
	pop	{r4}
	pop	{r0}
	bx	r0
.L293:
	.align	2, 0
.L292:
	.word	0x1004
.Lfe62:
	.size	 UpdateBubblesFieldEffect,.Lfe62-UpdateBubblesFieldEffect
	.align	2, 0
	.globl	FldEff_BerryTreeGrowthSparkle
	.type	 FldEff_BerryTreeGrowthSparkle,function
	.thumb_func
FldEff_BerryTreeGrowthSparkle:
	push	{r4, lr}
	ldr	r4, .L296
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0x4
	bl	SetSpritePosToOffsetMapCoords
	mov	r0, #0x16
	bl	LoadFieldEffectPalette
	ldr	r0, .L296+0x4
	ldr	r0, [r0, #0x58]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	ldrb	r3, [r4, #0x8]
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L295	@cond_branch
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L296+0x8
	add	r2, r2, r0
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x2
	orr	r0, r0, r1
	strb	r0, [r3]
	mov	r0, #0x3
	ldrb	r1, [r4, #0xc]
	and	r1, r1, r0
	lsl	r1, r1, #0x2
	ldrb	r3, [r2, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	strb	r0, [r2, #0x5]
	mov	r0, #0x17
	strh	r0, [r2, #0x2e]
.L295:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L297:
	.align	2, 0
.L296:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe63:
	.size	 FldEff_BerryTreeGrowthSparkle,.Lfe63-FldEff_BerryTreeGrowthSparkle
	.align	2, 0
	.globl	ShowTreeDisguiseFieldEffect
	.type	 ShowTreeDisguiseFieldEffect,function
	.thumb_func
ShowTreeDisguiseFieldEffect:
	push	{lr}
	mov	r0, #0x1c
	mov	r1, #0x18
	bl	ShowDisguiseFieldEffect
	pop	{r1}
	bx	r1
.Lfe64:
	.size	 ShowTreeDisguiseFieldEffect,.Lfe64-ShowTreeDisguiseFieldEffect
	.align	2, 0
	.globl	ShowMountainDisguiseFieldEffect
	.type	 ShowMountainDisguiseFieldEffect,function
	.thumb_func
ShowMountainDisguiseFieldEffect:
	push	{lr}
	mov	r0, #0x1d
	mov	r1, #0x19
	bl	ShowDisguiseFieldEffect
	pop	{r1}
	bx	r1
.Lfe65:
	.size	 ShowMountainDisguiseFieldEffect,.Lfe65-ShowMountainDisguiseFieldEffect
	.align	2, 0
	.globl	ShowSandDisguiseFieldEffect
	.type	 ShowSandDisguiseFieldEffect,function
	.thumb_func
ShowSandDisguiseFieldEffect:
	push	{lr}
	mov	r0, #0x24
	mov	r1, #0x1c
	bl	ShowDisguiseFieldEffect
	pop	{r1}
	bx	r1
.Lfe66:
	.size	 ShowSandDisguiseFieldEffect,.Lfe66-ShowSandDisguiseFieldEffect
	.align	2, 0
	.type	 ShowDisguiseFieldEffect,function
	.thumb_func
ShowDisguiseFieldEffect:
	push	{r4, r5, r6, r7, lr}
	add	sp, sp, #-0x4
	lsl	r0, r0, #0x18
	lsr	r4, r0, #0x18
	add	r7, r4, #0
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	ldr	r6, .L305
	ldrb	r0, [r6]
	ldrb	r1, [r6, #0x4]
	ldrb	r2, [r6, #0x8]
	mov	r3, sp
	bl	TryGetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L302	@cond_branch
	add	r0, r4, #0
	bl	FieldEffectActiveListRemove
	mov	r0, #0x40
	b	.L304
.L306:
	.align	2, 0
.L305:
	.word	gFieldEffectArguments
.L302:
	add	r0, r5, #0
	bl	LoadFieldEffectPalette
	ldr	r1, .L307
	lsl	r0, r5, #0x2
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	r1, #0x0
	mov	r2, #0x0
	mov	r3, #0x0
	bl	CreateSpriteAtEnd
	mov	r1, sp
	strb	r0, [r1]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	cmp	r0, #0x40
	beq	.L303	@cond_branch
	mov	r0, sp
	ldrb	r0, [r0]
	lsl	r2, r0, #0x4
	add	r2, r2, r0
	lsl	r2, r2, #0x2
	ldr	r0, .L307+0x4
	add	r2, r2, r0
	mov	r0, #0x3e
	add	r0, r0, r2
	mov	ip, r0
	ldrb	r3, [r0]
	lsl	r1, r3, #0x1e
	lsr	r1, r1, #0x1f
	add	r1, r1, #0x1
	mov	r0, #0x1
	and	r1, r1, r0
	lsl	r1, r1, #0x1
	mov	r0, #0x3
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r1
	mov	r1, ip
	strb	r0, [r1]
	strh	r7, [r2, #0x30]
	ldr	r0, [r6]
	strh	r0, [r2, #0x32]
	ldr	r0, [r6, #0x4]
	strh	r0, [r2, #0x34]
	ldr	r0, [r6, #0x8]
	strh	r0, [r2, #0x36]
.L303:
	mov	r0, sp
	ldrb	r0, [r0]
.L304:
	add	sp, sp, #0x4
	pop	{r4, r5, r6, r7}
	pop	{r1}
	bx	r1
.L308:
	.align	2, 0
.L307:
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe67:
	.size	 ShowDisguiseFieldEffect,.Lfe67-ShowDisguiseFieldEffect
	.align	2, 0
	.globl	UpdateDisguiseFieldEffect
	.type	 UpdateDisguiseFieldEffect,function
	.thumb_func
UpdateDisguiseFieldEffect:
	push	{r4, r5, lr}
	add	sp, sp, #-0x4
	add	r5, r0, #0
	ldrh	r0, [r5, #0x32]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	ldrh	r1, [r5, #0x34]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	ldrh	r2, [r5, #0x36]
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	mov	r3, sp
	bl	TryGetObjectEventIdByLocalIdAndMap
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L310	@cond_branch
	ldrh	r1, [r5, #0x30]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	bl	FieldEffectStop
.L310:
	ldr	r4, .L314
	mov	r0, sp
	ldrb	r1, [r0]
	lsl	r0, r1, #0x3
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r4
	ldrb	r0, [r0, #0x5]
	bl	GetObjectEventGraphicsInfo
	mov	r1, sp
	ldrb	r2, [r1]
	lsl	r1, r2, #0x3
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r4
	ldrb	r1, [r1, #0x4]
	lsl	r2, r1, #0x4
	add	r2, r2, r1
	lsl	r2, r2, #0x2
	ldr	r1, .L314+0x4
	add	r2, r2, r1
	add	r1, r2, #0
	add	r1, r1, #0x3e
	ldrb	r1, [r1]
	mov	r3, #0x3e
	add	r3, r3, r5
	mov	ip, r3
	mov	r3, #0x4
	and	r3, r3, r1
	mov	r1, ip
	ldrb	r4, [r1]
	mov	r1, #0x5
	neg	r1, r1
	and	r1, r1, r4
	orr	r1, r1, r3
	mov	r3, ip
	strb	r1, [r3]
	ldrh	r1, [r2, #0x20]
	strh	r1, [r5, #0x20]
	ldrh	r0, [r0, #0xa]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x11
	ldrh	r1, [r2, #0x22]
	add	r0, r0, r1
	sub	r0, r0, #0x10
	strh	r0, [r5, #0x22]
	add	r2, r2, #0x43
	ldrb	r0, [r2]
	sub	r0, r0, #0x1
	add	r1, r5, #0
	add	r1, r1, #0x43
	strb	r0, [r1]
	ldrh	r1, [r5, #0x2e]
	mov	r2, #0x2e
	ldrsh	r0, [r5, r2]
	cmp	r0, #0x1
	bne	.L311	@cond_branch
	add	r0, r1, #0x1
	strh	r0, [r5, #0x2e]
	add	r0, r5, #0
	mov	r1, #0x1
	bl	StartSpriteAnim
.L311:
	mov	r3, #0x2e
	ldrsh	r0, [r5, r3]
	ldrh	r2, [r5, #0x2e]
	cmp	r0, #0x2
	bne	.L312	@cond_branch
	add	r0, r5, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L312	@cond_branch
	mov	r0, #0x1
	strh	r0, [r5, #0x3c]
.L312:
	lsl	r0, r2, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x3
	bne	.L313	@cond_branch
	ldrh	r1, [r5, #0x30]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r5, #0
	bl	FieldEffectStop
.L313:
	add	sp, sp, #0x4
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L315:
	.align	2, 0
.L314:
	.word	gObjectEvents
	.word	gSprites
.Lfe68:
	.size	 UpdateDisguiseFieldEffect,.Lfe68-UpdateDisguiseFieldEffect
	.align	2, 0
	.globl	sub_8155D78
	.type	 sub_8155D78,function
	.thumb_func
sub_8155D78:
	push	{lr}
	add	r1, r0, #0
	add	r0, r0, #0x21
	ldrb	r0, [r0]
	cmp	r0, #0x1
	bne	.L317	@cond_branch
	ldr	r2, .L318
	ldrb	r1, [r1, #0x1a]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	add	r0, r0, r2
	ldrh	r1, [r0, #0x2e]
	add	r1, r1, #0x1
	strh	r1, [r0, #0x2e]
.L317:
	pop	{r0}
	bx	r0
.L319:
	.align	2, 0
.L318:
	.word	gSprites
.Lfe69:
	.size	 sub_8155D78,.Lfe69-sub_8155D78
	.align	2, 0
	.globl	sub_8155DA0
	.type	 sub_8155DA0,function
	.thumb_func
sub_8155DA0:
	push	{lr}
	add	r2, r0, #0
	add	r2, r2, #0x21
	ldrb	r1, [r2]
	cmp	r1, #0x2
	beq	.L325	@cond_branch
	cmp	r1, #0
	beq	.L325	@cond_branch
	ldrb	r1, [r0, #0x1a]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L326
	add	r1, r0, r1
	mov	r3, #0x3c
	ldrsh	r0, [r1, r3]
	cmp	r0, #0
	bne	.L323	@cond_branch
	mov	r0, #0x0
	b	.L324
.L327:
	.align	2, 0
.L326:
	.word	gSprites
.L323:
	mov	r0, #0x2
	strb	r0, [r2]
	ldrh	r0, [r1, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r1, #0x2e]
.L325:
	mov	r0, #0x1
.L324:
	pop	{r1}
	bx	r1
.Lfe70:
	.size	 sub_8155DA0,.Lfe70-sub_8155DA0
	.align	2, 0
	.globl	FldEff_Sparkle
	.type	 FldEff_Sparkle,function
	.thumb_func
FldEff_Sparkle:
	push	{r4, lr}
	ldr	r4, .L330
	ldr	r0, [r4]
	add	r0, r0, #0x7
	str	r0, [r4]
	ldr	r0, [r4, #0x4]
	add	r0, r0, #0x7
	str	r0, [r4, #0x4]
	add	r1, r4, #0x4
	add	r0, r4, #0
	mov	r2, #0x8
	mov	r3, #0x8
	bl	SetSpritePosToOffsetMapCoords
	ldr	r0, .L330+0x4
	add	r0, r0, #0x8c
	ldr	r0, [r0]
	mov	r2, #0x0
	ldrsh	r1, [r4, r2]
	mov	r3, #0x4
	ldrsh	r2, [r4, r3]
	mov	r3, #0x52
	bl	CreateSpriteAtEnd
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x40
	beq	.L329	@cond_branch
	ldr	r0, .L330+0x8
	lsl	r1, r2, #0x4
	add	r1, r1, r2
	lsl	r1, r1, #0x2
	add	r1, r1, r0
	mov	r0, #0x3
	ldrb	r2, [r4, #0x8]
	and	r2, r2, r0
	lsl	r2, r2, #0x2
	ldrb	r3, [r1, #0x5]
	mov	r0, #0xd
	neg	r0, r0
	and	r0, r0, r3
	orr	r0, r0, r2
	strb	r0, [r1, #0x5]
	add	r1, r1, #0x3e
	ldrb	r0, [r1]
	mov	r2, #0x2
	orr	r0, r0, r2
	strb	r0, [r1]
.L329:
	mov	r0, #0x0
	pop	{r4}
	pop	{r1}
	bx	r1
.L331:
	.align	2, 0
.L330:
	.word	gFieldEffectArguments
	.word	gFieldEffectObjectTemplatePointers
	.word	gSprites
.Lfe71:
	.size	 FldEff_Sparkle,.Lfe71-FldEff_Sparkle
	.align	2, 0
	.globl	UpdateSparkleFieldEffect
	.type	 UpdateSparkleFieldEffect,function
	.thumb_func
UpdateSparkleFieldEffect:
	push	{lr}
	add	r2, r0, #0
	mov	r1, #0x2e
	ldrsh	r0, [r2, r1]
	cmp	r0, #0
	bne	.L333	@cond_branch
	add	r0, r2, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L334	@cond_branch
	add	r3, r2, #0
	add	r3, r3, #0x3e
	ldrb	r0, [r3]
	mov	r1, #0x4
	orr	r0, r0, r1
	strb	r0, [r3]
	ldrh	r0, [r2, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x2e]
.L334:
	mov	r1, #0x2e
	ldrsh	r0, [r2, r1]
	cmp	r0, #0
	beq	.L332	@cond_branch
.L333:
	ldrh	r0, [r2, #0x30]
	add	r0, r0, #0x1
	strh	r0, [r2, #0x30]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x22
	ble	.L332	@cond_branch
	add	r0, r2, #0
	mov	r1, #0x36
	bl	FieldEffectStop
.L332:
	pop	{r0}
	bx	r0
.Lfe72:
	.size	 UpdateSparkleFieldEffect,.Lfe72-UpdateSparkleFieldEffect
	.align	2, 0
	.type	 InitRayquazaForFigure8Anim,function
	.thumb_func
InitRayquazaForFigure8Anim:
	mov	r1, #0x0
	strh	r1, [r0, #0x3a]
	strh	r1, [r0, #0x3c]
	bx	lr
.Lfe73:
	.size	 InitRayquazaForFigure8Anim,.Lfe73-InitRayquazaForFigure8Anim
	.align	2, 0
	.type	 AnimateRayquazaInFigure8,function
	.thumb_func
AnimateRayquazaInFigure8:
	push	{r4, r5, r6, lr}
	add	r5, r0, #0
	mov	r6, #0x0
	mov	r1, #0x3c
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x1
	beq	.L341	@cond_branch
	cmp	r0, #0x1
	bgt	.L346	@cond_branch
	cmp	r0, #0
	beq	.L340	@cond_branch
	b	.L339
.L346:
	cmp	r0, #0x2
	beq	.L342	@cond_branch
	cmp	r0, #0x3
	beq	.L343	@cond_branch
	b	.L339
.L340:
	mov	r2, #0x3a
	ldrsh	r0, [r5, r2]
	bl	GetFigure8XOffset
	ldrh	r1, [r5, #0x24]
	add	r0, r0, r1
	strh	r0, [r5, #0x24]
	mov	r2, #0x3a
	ldrsh	r0, [r5, r2]
	b	.L349
.L341:
	ldrh	r0, [r5, #0x3a]
	mov	r4, #0x47
	sub	r0, r4, r0
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	bl	GetFigure8XOffset
	ldrh	r1, [r5, #0x24]
	sub	r1, r1, r0
	strh	r1, [r5, #0x24]
	ldrh	r0, [r5, #0x3a]
	sub	r4, r4, r0
	lsl	r4, r4, #0x10
	asr	r4, r4, #0x10
	add	r0, r4, #0
	bl	GetFigure8YOffset
	ldrh	r2, [r5, #0x26]
	add	r0, r0, r2
	b	.L350
.L342:
	mov	r1, #0x3a
	ldrsh	r0, [r5, r1]
	bl	GetFigure8XOffset
	ldrh	r1, [r5, #0x24]
	sub	r1, r1, r0
	strh	r1, [r5, #0x24]
	mov	r2, #0x3a
	ldrsh	r0, [r5, r2]
	b	.L349
.L343:
	ldrh	r0, [r5, #0x3a]
	mov	r4, #0x47
	sub	r0, r4, r0
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	bl	GetFigure8XOffset
	ldrh	r2, [r5, #0x24]
	add	r0, r0, r2
	strh	r0, [r5, #0x24]
	ldrh	r0, [r5, #0x3a]
	sub	r4, r4, r0
	lsl	r4, r4, #0x10
	asr	r4, r4, #0x10
	add	r0, r4, #0
.L349:
	bl	GetFigure8YOffset
	ldrh	r1, [r5, #0x26]
	add	r0, r0, r1
.L350:
	strh	r0, [r5, #0x26]
.L339:
	ldrh	r1, [r5, #0x24]
	neg	r1, r1
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x10
	bl	SetGpuReg
	ldrh	r0, [r5, #0x3a]
	add	r0, r0, #0x1
	mov	r1, #0x0
	strh	r0, [r5, #0x3a]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x48
	bne	.L347	@cond_branch
	strh	r1, [r5, #0x3a]
	ldrh	r0, [r5, #0x3c]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x3c]
.L347:
	mov	r2, #0x3c
	ldrsh	r0, [r5, r2]
	cmp	r0, #0x4
	bne	.L348	@cond_branch
	strh	r1, [r5, #0x26]
	strh	r1, [r5, #0x24]
	mov	r6, #0x1
.L348:
	add	r0, r6, #0
	pop	{r4, r5, r6}
	pop	{r1}
	bx	r1
.Lfe74:
	.size	 AnimateRayquazaInFigure8,.Lfe74-AnimateRayquazaInFigure8
	.align	2, 0
	.globl	UpdateRayquazaSpotlightEffect
	.type	 UpdateRayquazaSpotlightEffect,function
	.thumb_func
UpdateRayquazaSpotlightEffect:
	push	{r4, r5, r6, r7, lr}
	add	r5, r0, #0
	mov	r1, #0x32
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x8
	bls	.LCB5843
	b	.L352	@long jump
.LCB5843:
	lsl	r0, r0, #0x2
	ldr	r1, .L402
	add	r0, r0, r1
	ldr	r0, [r0]
	mov	pc, r0
.L403:
	.align	2, 0
.L402:
	.word	.L396
	.align	2, 0
	.align	2, 0
.L396:
	.word	.L353
	.word	.L366
	.word	.L368
	.word	.L371
	.word	.L376
	.word	.L378
	.word	.L379
	.word	.L383
	.word	.L385
.L353:
	mov	r2, #0x2e
	ldrsh	r0, [r5, r2]
	mov	r1, #0x3
	bl	__divsi3
	mov	r1, #0x78
	sub	r1, r1, r0
	lsl	r1, r1, #0x10
	lsr	r1, r1, #0x10
	mov	r0, #0x12
	bl	SetGpuReg
	mov	r3, #0x2e
	ldrsh	r0, [r5, r3]
	cmp	r0, #0x60
	bne	.L354	@cond_branch
	mov	r1, #0x0
	ldr	r4, .L404
	mov	ip, r4
	ldr	r0, .L404+0x4
	add	r7, r0, #0
.L358:
	mov	r2, #0xc
	lsl	r0, r1, #0x1
	add	r3, r1, #0x1
	lsl	r6, r1, #0x5
	add	r0, r0, r1
	lsl	r4, r0, #0x1
.L362:
	add	r0, r6, r2
	lsl	r0, r0, #0x1
	add	r0, r0, ip
	add	r1, r2, r7
	add	r1, r4, r1
	add	r1, r1, #0x1
	strh	r1, [r0]
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x11
	bls	.L362	@cond_branch
	lsl	r0, r3, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0x2
	bls	.L358	@cond_branch
.L354:
	mov	r2, #0x2e
	ldrsh	r1, [r5, r2]
	ldr	r0, .L404+0x8
	cmp	r1, r0
	bgt	.LCB5934
	b	.L352	@long jump
.LCB5934:
	mov	r1, #0x0
	mov	r0, #0x1
	b	.L401
.L405:
	.align	2, 0
.L404:
	.word	0x600f800
	.word	0xbff4
	.word	0x137
.L366:
	ldr	r4, .L406
	mov	r3, #0x2e
	ldrsh	r0, [r5, r3]
	mov	r1, #0x3
	bl	__divsi3
	lsl	r0, r0, #0x10
	asr	r0, r0, #0xf
	add	r0, r0, r4
	ldrh	r0, [r0]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x12
	ldrh	r4, [r5, #0x36]
	add	r0, r0, r4
	mov	r1, #0x0
	strh	r0, [r5, #0x22]
	mov	r2, #0x2e
	ldrsh	r0, [r5, r2]
	cmp	r0, #0xbd
	bne	.L352	@cond_branch
	mov	r0, #0x2
	strh	r0, [r5, #0x32]
	strh	r1, [r5, #0x38]
	strh	r1, [r5, #0x2e]
	b	.L352
.L407:
	.align	2, 0
.L406:
	.word	gSineTable
.L368:
	mov	r3, #0x2e
	ldrsh	r0, [r5, r3]
	cmp	r0, #0x3c
	bne	.L369	@cond_branch
	ldrh	r0, [r5, #0x38]
	add	r0, r0, #0x1
	mov	r1, #0x0
	strh	r0, [r5, #0x38]
	strh	r1, [r5, #0x2e]
.L369:
	mov	r4, #0x38
	ldrsh	r0, [r5, r4]
	cmp	r0, #0x7
	bne	.L352	@cond_branch
	mov	r0, #0x0
	strh	r0, [r5, #0x38]
	mov	r0, #0x3
	strh	r0, [r5, #0x32]
	b	.L352
.L371:
	ldrh	r2, [r5, #0x26]
	mov	r0, #0x26
	ldrsh	r1, [r5, r0]
	add	r3, r2, #0
	cmp	r1, #0
	bne	.L372	@cond_branch
	strh	r1, [r5, #0x2e]
	ldrh	r0, [r5, #0x32]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x32]
.L372:
	mov	r4, #0x2e
	ldrsh	r0, [r5, r4]
	cmp	r0, #0x5
	bne	.L352	@cond_branch
	mov	r0, #0x0
	strh	r0, [r5, #0x2e]
	cmp	r1, #0
	ble	.L374	@cond_branch
	sub	r0, r3, #0x1
	strh	r0, [r5, #0x26]
	b	.L352
.L374:
	add	r0, r2, #0x1
	strh	r0, [r5, #0x26]
	b	.L352
.L376:
	mov	r1, #0x2e
	ldrsh	r0, [r5, r1]
	cmp	r0, #0x3c
	bne	.L352	@cond_branch
	mov	r1, #0x0
	mov	r0, #0x5
	strh	r0, [r5, #0x32]
	strh	r1, [r5, #0x2e]
	strh	r1, [r5, #0x38]
	b	.L352
.L378:
	add	r0, r5, #0
	bl	InitRayquazaForFigure8Anim
	mov	r1, #0x0
	mov	r0, #0x6
	b	.L401
.L379:
	add	r0, r5, #0
	bl	AnimateRayquazaInFigure8
	lsl	r0, r0, #0x18
	cmp	r0, #0
	beq	.L352	@cond_branch
	mov	r1, #0x0
	strh	r1, [r5, #0x2e]
	ldrh	r0, [r5, #0x38]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x38]
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	cmp	r0, #0x2
	bgt	.L381	@cond_branch
	add	r0, r5, #0
	bl	InitRayquazaForFigure8Anim
	b	.L352
.L381:
	strh	r1, [r5, #0x38]
	mov	r0, #0x7
	strh	r0, [r5, #0x32]
	b	.L352
.L383:
	mov	r2, #0x2e
	ldrsh	r0, [r5, r2]
	cmp	r0, #0x1e
	bne	.L352	@cond_branch
	mov	r1, #0x0
	mov	r0, #0x8
.L401:
	strh	r0, [r5, #0x32]
	strh	r1, [r5, #0x2e]
	b	.L352
.L385:
	mov	r1, #0x0
	ldr	r6, .L408
	mov	r4, #0x0
.L389:
	mov	r2, #0xc
	add	r3, r1, #0x1
	lsl	r1, r1, #0x5
.L393:
	add	r0, r1, r2
	lsl	r0, r0, #0x1
	add	r0, r0, r6
	strh	r4, [r0]
	add	r0, r2, #0x1
	lsl	r0, r0, #0x18
	lsr	r2, r0, #0x18
	cmp	r2, #0x11
	bls	.L393	@cond_branch
	lsl	r0, r3, #0x18
	lsr	r1, r0, #0x18
	cmp	r1, #0xe
	bls	.L389	@cond_branch
	mov	r0, #0x12
	mov	r1, #0x0
	bl	SetGpuReg
	add	r0, r5, #0
	mov	r1, #0x40
	bl	FieldEffectStop
.L352:
	mov	r3, #0x32
	ldrsh	r0, [r5, r3]
	cmp	r0, #0x1
	bne	.L398	@cond_branch
	ldrh	r1, [r5, #0x30]
	mov	r0, #0x7
	and	r0, r0, r1
	add	r2, r1, #0
	cmp	r0, #0
	bne	.L399	@cond_branch
	ldrh	r0, [r5, #0x34]
	ldrh	r4, [r5, #0x26]
	add	r0, r0, r4
	strh	r0, [r5, #0x26]
.L399:
	mov	r0, #0xf
	and	r0, r0, r2
	cmp	r0, #0
	bne	.L400	@cond_branch
	ldrh	r0, [r5, #0x34]
	neg	r0, r0
	strh	r0, [r5, #0x34]
.L400:
	add	r0, r1, #0x1
	strh	r0, [r5, #0x30]
.L398:
	ldrh	r0, [r5, #0x2e]
	add	r0, r0, #0x1
	strh	r0, [r5, #0x2e]
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.L409:
	.align	2, 0
.L408:
	.word	0x600f800
.Lfe75:
	.size	 UpdateRayquazaSpotlightEffect,.Lfe75-UpdateRayquazaSpotlightEffect
	.align	2, 0
	.globl	UpdateJumpImpactEffect
	.type	 UpdateJumpImpactEffect,function
	.thumb_func
UpdateJumpImpactEffect:
	push	{r4, lr}
	add	r4, r0, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L411	@cond_branch
	ldrh	r1, [r4, #0x30]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r4, #0
	bl	FieldEffectStop
	b	.L412
.L411:
	add	r0, r4, #0
	mov	r1, #0x0
	bl	UpdateObjectEventSpriteVisibility
	ldrh	r0, [r4, #0x2e]
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	add	r1, r4, #0
	mov	r2, #0x0
	bl	SetObjectSubpriorityByZCoord
.L412:
	pop	{r4}
	pop	{r0}
	bx	r0
.Lfe76:
	.size	 UpdateJumpImpactEffect,.Lfe76-UpdateJumpImpactEffect
	.align	2, 0
	.globl	WaitFieldEffectSpriteAnim
	.type	 WaitFieldEffectSpriteAnim,function
	.thumb_func
WaitFieldEffectSpriteAnim:
	push	{lr}
	add	r2, r0, #0
	add	r0, r0, #0x3f
	ldrb	r1, [r0]
	mov	r0, #0x10
	and	r0, r0, r1
	cmp	r0, #0
	beq	.L414	@cond_branch
	ldrh	r1, [r2, #0x2e]
	lsl	r1, r1, #0x18
	lsr	r1, r1, #0x18
	add	r0, r2, #0
	bl	FieldEffectStop
	b	.L415
.L414:
	add	r0, r2, #0
	mov	r1, #0x0
	bl	UpdateObjectEventSpriteVisibility
.L415:
	pop	{r0}
	bx	r0
.Lfe77:
	.size	 WaitFieldEffectSpriteAnim,.Lfe77-WaitFieldEffectSpriteAnim
	.align	2, 0
	.type	 sub_81561FC,function
	.thumb_func
sub_81561FC:
	push	{r4, r5, r6, r7, lr}
	add	r6, r0, #0
	add	r0, r1, #0
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	lsl	r2, r2, #0x18
	lsr	r2, r2, #0x18
	add	r1, r6, #0
	bl	SetObjectSubpriorityByZCoord
	mov	r7, #0x0
.L420:
	lsl	r0, r7, #0x3
	add	r0, r0, r7
	lsl	r0, r0, #0x2
	ldr	r1, .L426
	add	r4, r0, r1
	ldrb	r0, [r4]
	lsl	r0, r0, #0x1f
	cmp	r0, #0
	beq	.L419	@cond_branch
	ldrb	r0, [r4, #0x5]
	bl	GetObjectEventGraphicsInfo
	ldrb	r1, [r4, #0x4]
	lsl	r0, r1, #0x4
	add	r0, r0, r1
	lsl	r0, r0, #0x2
	ldr	r1, .L426+0x4
	add	r5, r0, r1
	add	r0, r6, #0
	add	r0, r0, #0x28
	mov	r2, #0x0
	ldrsb	r2, [r0, r2]
	ldrh	r0, [r6, #0x20]
	add	r1, r0, r2
	sub	r0, r0, r2
	lsl	r0, r0, #0x10
	lsr	r4, r0, #0x10
	lsl	r1, r1, #0x10
	asr	r1, r1, #0x10
	mov	r0, #0x20
	ldrsh	r2, [r5, r0]
	cmp	r1, r2
	bge	.L419	@cond_branch
	lsl	r0, r4, #0x10
	asr	r0, r0, #0x10
	cmp	r0, r2
	ble	.L419	@cond_branch
	add	r0, r5, #0
	add	r0, r0, #0x29
	mov	r3, #0x0
	ldrsb	r3, [r0, r3]
	ldrh	r2, [r5, #0x22]
	add	r2, r2, r3
	ldrh	r4, [r5, #0x22]
	add	r0, r6, #0
	add	r0, r0, #0x29
	mov	r1, #0x0
	ldrsb	r1, [r0, r1]
	ldrh	r0, [r6, #0x22]
	sub	r0, r0, r1
	lsl	r0, r0, #0x10
	asr	r0, r0, #0x10
	add	r3, r0, r3
	lsl	r2, r2, #0x10
	asr	r2, r2, #0x10
	lsl	r3, r3, #0x10
	asr	r3, r3, #0x10
	cmp	r2, r3
	blt	.L424	@cond_branch
	cmp	r2, r0
	bge	.L419	@cond_branch
.L424:
	lsl	r0, r4, #0x10
	asr	r0, r0, #0x10
	cmp	r0, r3
	ble	.L419	@cond_branch
	add	r2, r6, #0
	add	r2, r2, #0x43
	add	r0, r5, #0
	add	r0, r0, #0x43
	ldrb	r1, [r0]
	ldrb	r0, [r2]
	cmp	r0, r1
	bhi	.L419	@cond_branch
	add	r0, r1, #0x2
	strb	r0, [r2]
	b	.L418
.L427:
	.align	2, 0
.L426:
	.word	gObjectEvents
	.word	gSprites
.L419:
	add	r0, r7, #0x1
	lsl	r0, r0, #0x18
	lsr	r7, r0, #0x18
	cmp	r7, #0xf
	bls	.L420	@cond_branch
.L418:
	pop	{r4, r5, r6, r7}
	pop	{r0}
	bx	r0
.Lfe78:
	.size	 sub_81561FC,.Lfe78-sub_81561FC
	.align	2, 0
	.type	 LoadFieldEffectPalette_,function
	.thumb_func
LoadFieldEffectPalette_:
	push	{r4, r5, lr}
	lsl	r0, r0, #0x18
	lsl	r1, r1, #0x18
	lsr	r5, r1, #0x18
	ldr	r1, .L431
	lsr	r0, r0, #0x16
	add	r0, r0, r1
	ldr	r4, [r0]
	ldrh	r1, [r4, #0x2]
	ldr	r0, .L431+0x4
	cmp	r1, r0
	beq	.L429	@cond_branch
	add	r0, r1, #0
	bl	LoadObjectEventPalette
	cmp	r5, #0
	beq	.L429	@cond_branch
	ldrh	r0, [r4, #0x2]
	bl	IndexOfSpritePaletteTag
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x1
	bl	UpdatePaletteGammaType
.L429:
	pop	{r4, r5}
	pop	{r0}
	bx	r0
.L432:
	.align	2, 0
.L431:
	.word	gFieldEffectObjectTemplatePointers
	.word	0xffff
.Lfe79:
	.size	 LoadFieldEffectPalette_,.Lfe79-LoadFieldEffectPalette_
	.align	2, 0
	.globl	LoadFieldEffectPalette
	.type	 LoadFieldEffectPalette,function
	.thumb_func
LoadFieldEffectPalette:
	push	{lr}
	lsl	r0, r0, #0x18
	lsr	r0, r0, #0x18
	mov	r1, #0x1
	bl	LoadFieldEffectPalette_
	pop	{r0}
	bx	r0
.Lfe80:
	.size	 LoadFieldEffectPalette,.Lfe80-LoadFieldEffectPalette
	.section .rodata
	.type	 gUnknown_085CDC6E,object
gUnknown_085CDC6E:
	.byte	0x1
	.byte	0x2
	.byte	0x2
	.byte	0x2
	.byte	0x2
	.byte	0x2
	.byte	0x2
	.byte	0x2
	.byte	0x2
	.byte	0x2
	.byte	0x2
	.byte	0x1
	.byte	0x2
	.byte	0x2
	.byte	0x1
	.byte	0x2
	.byte	0x2
	.byte	0x1
	.byte	0x2
	.byte	0x2
	.byte	0x1
	.byte	0x2
	.byte	0x1
	.byte	0x1
	.byte	0x2
	.byte	0x1
	.byte	0x1
	.byte	0x2
	.byte	0x1
	.byte	0x1
	.byte	0x2
	.byte	0x1
	.byte	0x1
	.byte	0x2
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0x1
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0x0
	.byte	0x1
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x1
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0x0
	.byte	0x0
	.byte	0xff
	.byte	0x0
	.byte	0xff
	.byte	0xff
	.byte	0x0
	.byte	0xff
	.byte	0xff
	.byte	0x0
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xff
	.byte	0xfe
	.byte	0x0
	.byte	0x0
	.size	 gUnknown_085CDC6E,146
.text
	.align	2, 0

